Grammar

    0 $accept: statements $end

    1 statements: statements statement
    2           | statement

    3 statement: expression SEMICOLON
    4          | assignment_statement
    5          | var_declaration
    6          | constant_declaration
    7          | extern_declartion
    8          | if_statement
    9          | while_statement
   10          | do_while_statement
   11          | for_statement
   12          | switch_statement
   13          | break_statement
   14          | continue_statement
   15          | function
   16          | function_call

   17 $@1: ε

   18 statement: OPENCURL $@1 statements CLOSEDCURL
   19          | RETURN return_value SEMICOLON
   20          | SEMICOLON

   21 value: expression
   22      | STRING_VAL
   23      | CHAR_VAL

   24 type: INT
   25     | FLOAT
   26     | CHAR
   27     | STRING
   28     | BOOL

   29 constant: INT_NUM
   30         | FLOAT_VAL
   31         | STRING_VAL
   32         | TRUE_VAL
   33         | FALSE_VAL
   34         | CHAR_VAL

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON
   36                     | IDENTIFIER PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER EQUAL function_call

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON
   42                | type IDENTIFIER EQUAL function_call
   43                | type IDENTIFIER SEMICOLON

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON
   46                  | EXTERN type IDENTIFIER EQUAL value SEMICOLON

   47 $@2: ε

   48 $@3: ε

   49 function: function_prototype OPENCURL $@2 statement CLOSEDCURL $@3

   50 return_value: value
   51             | ε

   52 $@4: ε

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET

   54 $@5: ε

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

   56 $@6: ε

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET

   58 $@7: ε

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

   60 parameters: parameters COMMA single_parameter
   61           | single_parameter

   62 single_parameter: type IDENTIFIER
   63                 | type IDENTIFIER EQUAL constant

   64 function_call: IDENTIFIER OPENBRACKET call_parameters CLOSEDBRACKET SEMICOLON

   65 call_parameters: call_parameter
   66                | ε

   67 call_parameter: call_parameter COMMA value
   68               | value

   69 expression: boolean_expression
   70           | arithmetic_expression

   71 boolean_expression: expression EQ_EQ arithmetic_expression
   72                   | expression NE arithmetic_expression
   73                   | expression GE arithmetic_expression
   74                   | expression LE arithmetic_expression
   75                   | expression GT arithmetic_expression
   76                   | expression LT arithmetic_expression
   77                   | expression AND arithmetic_expression
   78                   | expression OR arithmetic_expression
   79                   | NOT expression
   80                   | TRUE_VAL
   81                   | FALSE_VAL

   82 arithmetic_expression: binary_expression
   83                      | unary_expression

   84 unary_expression: IDENTIFIER INC
   85                 | IDENTIFIER DEC

   86 binary_expression: binary_expression PLUS term
   87                  | binary_expression MINUS term
   88                  | term

   89 term: factor
   90     | term MULT factor
   91     | term DIV factor

   92 factor: INT_NUM
   93       | FLOAT_VAL
   94       | IDENTIFIER
   95       | OPENBRACKET expression CLOSEDBRACKET

   96 $@8: ε

   97 $@9: ε

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement

   99 $@10: ε

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL

  101 $@11: ε

  102 else_if_statement: ELSE OPENCURL $@11 statements CLOSEDCURL
  103                  | ε

  104 while_statement: WHILE OPENBRACKET value CLOSEDBRACKET statement

  105 do_while_statement: DO statement WHILE OPENBRACKET value CLOSEDBRACKET SEMICOLON

  106 for_statement: FOR OPENBRACKET for_initialization value SEMICOLON for_expression CLOSEDBRACKET statement

  107 for_initialization: assignment_statement
  108                   | var_declaration
  109                   | value SEMICOLON
  110                   | SEMICOLON

  111 for_expression: IDENTIFIER EQUAL value SEMICOLON
  112               | IDENTIFIER PLUS_EQ expression
  113               | IDENTIFIER MINUS_EQ expression
  114               | IDENTIFIER MULT_EQ expression
  115               | IDENTIFIER DIV_EQ expression
  116               | value
  117               | ε

  118 $@12: ε

  119 $@13: ε

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL $@13

  121 case_list: case_list case_statement
  122          | case_statement

  123 case_statement: CASE value COLON statements
  124               | DEFAULT COLON statements

  125 break_statement: BREAK SEMICOLON

  126 continue_statement: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <name> (258) 35 36 37 38 39 40 41 42 43 44 45 46 53 55 57 59 62 63 64 84 85 94 111 112 113 114 115
    INT_NUM <lexicalstruct> (259) 29 92
    FLOAT_VAL <lexicalstruct> (260) 30 93
    STRING_VAL <lexicalstruct> (261) 22 31
    TRUE_VAL <lexicalstruct> (262) 32 80
    FALSE_VAL <lexicalstruct> (263) 33 81
    CHAR_VAL <lexicalstruct> (264) 23 34
    INT <var_type> (265) 24
    FLOAT <var_type> (266) 25
    CHAR <var_type> (267) 26
    BOOL <var_type> (268) 28
    STRING <var_type> (269) 27
    CONST (270) 44
    EXTERN (271) 45 46
    PLUS (272) 86
    MINUS (273) 87
    MULT (274) 90
    DIV (275) 91
    PLUS_EQ (276) 36 112
    MINUS_EQ (277) 37 113
    MULT_EQ (278) 38 114
    DIV_EQ (279) 39 115
    INC (280) 84
    DEC (281) 85
    LT (282) 76
    GT (283) 75
    GE (284) 73
    LE (285) 74
    EQ_EQ (286) 71
    NE (287) 72
    AND (288) 77
    OR (289) 78
    NOT (290) 79
    EQUAL (291) 35 40 41 42 44 46 63 111
    IF (292) 98
    ELSEIF (293) 100
    ELSE (294) 102
    WHILE (295) 104 105
    DO (296) 105
    FOR (297) 106
    SWITCH (298) 120
    CASE (299) 123
    DEFAULT (300) 124
    BREAK (301) 125
    CONTINUE (302) 126
    VOID (303) 57 59
    RETURN (304) 19
    COMMA (305) 60 67
    COLON (306) 123 124
    OPENBRACKET (307) 53 55 57 59 64 95 98 100 104 105 106 120
    CLOSEDBRACKET (308) 53 55 57 59 64 95 98 100 104 105 106 120
    OPENCURL (309) 18 49 98 100 102 120
    CLOSEDCURL (310) 18 49 98 100 102 120
    SEMICOLON (311) 3 19 20 35 36 37 38 39 41 43 44 45 46 64 105 106 109 110 111 125 126


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    statements (58)
        on left: 1 2
        on right: 0 1 18 98 100 102 123 124
    statement (59)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20
        on right: 1 2 49 104 105 106
    $@1 (60)
        on left: 17
        on right: 18
    value <lexicalstruct> (61)
        on left: 21 22 23
        on right: 41 44 46 50 67 68 98 100 104 105 106 109 111 116 120 123
    type <var_type> (62)
        on left: 24 25 26 27 28
        on right: 41 42 43 44 45 46 53 55 62 63
    constant <lexicalstruct> (63)
        on left: 29 30 31 32 33 34
        on right: 63
    assignment_statement (64)
        on left: 35 36 37 38 39 40
        on right: 4 107
    var_declaration (65)
        on left: 41 42 43
        on right: 5 108
    constant_declaration (66)
        on left: 44
        on right: 6
    extern_declartion (67)
        on left: 45 46
        on right: 7
    function (68)
        on left: 49
        on right: 15
    $@2 (69)
        on left: 47
        on right: 49
    $@3 (70)
        on left: 48
        on right: 49
    return_value (71)
        on left: 50 51
        on right: 19
    function_prototype (72)
        on left: 53 55 57 59
        on right: 49
    $@4 (73)
        on left: 52
        on right: 53
    $@5 (74)
        on left: 54
        on right: 55
    $@6 (75)
        on left: 56
        on right: 57
    $@7 (76)
        on left: 58
        on right: 59
    parameters (77)
        on left: 60 61
        on right: 53 57 60
    single_parameter (78)
        on left: 62 63
        on right: 60 61
    function_call <lexicalstruct> (79)
        on left: 64
        on right: 16 40 42
    call_parameters (80)
        on left: 65 66
        on right: 64
    call_parameter (81)
        on left: 67 68
        on right: 65 67
    expression <lexicalstruct> (82)
        on left: 69 70
        on right: 3 21 35 36 37 38 39 71 72 73 74 75 76 77 78 79 95 112 113 114 115
    boolean_expression <lexicalstruct> (83)
        on left: 71 72 73 74 75 76 77 78 79 80 81
        on right: 69
    arithmetic_expression <lexicalstruct> (84)
        on left: 82 83
        on right: 70 71 72 73 74 75 76 77 78
    unary_expression <lexicalstruct> (85)
        on left: 84 85
        on right: 83
    binary_expression <lexicalstruct> (86)
        on left: 86 87 88
        on right: 82 86 87
    term <lexicalstruct> (87)
        on left: 89 90 91
        on right: 86 87 88 90 91
    factor <lexicalstruct> (88)
        on left: 92 93 94 95
        on right: 89 90 91
    if_statement (89)
        on left: 98
        on right: 8
    $@8 (90)
        on left: 96
        on right: 98
    $@9 (91)
        on left: 97
        on right: 98
    else_if_statement (92)
        on left: 100 102 103
        on right: 98 100
    $@10 (93)
        on left: 99
        on right: 100
    $@11 (94)
        on left: 101
        on right: 102
    while_statement (95)
        on left: 104
        on right: 9
    do_while_statement (96)
        on left: 105
        on right: 10
    for_statement (97)
        on left: 106
        on right: 11
    for_initialization (98)
        on left: 107 108 109 110
        on right: 106
    for_expression (99)
        on left: 111 112 113 114 115 116 117
        on right: 106
    switch_statement (100)
        on left: 120
        on right: 12
    $@12 (101)
        on left: 118
        on right: 120
    $@13 (102)
        on left: 119
        on right: 120
    case_list (103)
        on left: 121 122
        on right: 120 121
    case_statement (104)
        on left: 123 124
        on right: 121 122
    break_statement (105)
        on left: 125
        on right: 13
    continue_statement (106)
        on left: 126
        on right: 14


State 0

    0 $accept: • statements $end

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 26
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 1

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   64 function_call: IDENTIFIER • OPENBRACKET call_parameters CLOSEDBRACKET SEMICOLON
   84 unary_expression: IDENTIFIER • INC
   85                 | IDENTIFIER • DEC
   94 factor: IDENTIFIER •

    PLUS_EQ      shift, and go to state 50
    MINUS_EQ     shift, and go to state 51
    MULT_EQ      shift, and go to state 52
    DIV_EQ       shift, and go to state 53
    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    EQUAL        shift, and go to state 56
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 94 (factor)


State 2

   92 factor: INT_NUM •

    $default  reduce using rule 92 (factor)


State 3

   93 factor: FLOAT_VAL •

    $default  reduce using rule 93 (factor)


State 4

   80 boolean_expression: TRUE_VAL •

    $default  reduce using rule 80 (boolean_expression)


State 5

   81 boolean_expression: FALSE_VAL •

    $default  reduce using rule 81 (boolean_expression)


State 6

   24 type: INT •

    $default  reduce using rule 24 (type)


State 7

   25 type: FLOAT •

    $default  reduce using rule 25 (type)


State 8

   26 type: CHAR •

    $default  reduce using rule 26 (type)


State 9

   28 type: BOOL •

    $default  reduce using rule 28 (type)


State 10

   27 type: STRING •

    $default  reduce using rule 27 (type)


State 11

   44 constant_declaration: CONST • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 58


State 12

   45 extern_declartion: EXTERN • type IDENTIFIER SEMICOLON
   46                  | EXTERN • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 59


State 13

   79 boolean_expression: NOT • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 61
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 14

   98 if_statement: IF • OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement

    OPENBRACKET  shift, and go to state 62


State 15

  104 while_statement: WHILE • OPENBRACKET value CLOSEDBRACKET statement

    OPENBRACKET  shift, and go to state 63


State 16

  105 do_while_statement: DO • statement WHILE OPENBRACKET value CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 64
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 17

  106 for_statement: FOR • OPENBRACKET for_initialization value SEMICOLON for_expression CLOSEDBRACKET statement

    OPENBRACKET  shift, and go to state 65


State 18

  120 switch_statement: SWITCH • OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL $@13

    OPENBRACKET  shift, and go to state 66


State 19

  125 break_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 20

  126 continue_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 68


State 21

   57 function_prototype: VOID • IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET
   59                   | VOID • IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 69


State 22

   19 statement: RETURN • return_value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 51 (return_value)

    value                  go to state 72
    return_value           go to state 73
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 23

   95 factor: OPENBRACKET • expression CLOSEDBRACKET

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 75
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 24

   18 statement: OPENCURL • $@1 statements CLOSEDCURL

    $default  reduce using rule 17 ($@1)

    $@1  go to state 76


State 25

   20 statement: SEMICOLON •

    $default  reduce using rule 20 (statement)


State 26

    0 $accept: statements • $end
    1 statements: statements • statement

    $end         shift, and go to state 77
    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 27

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 28

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON
   53 function_prototype: type • IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET
   55                   | type • IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 79


State 29

    4 statement: assignment_statement •

    $default  reduce using rule 4 (statement)


State 30

    5 statement: var_declaration •

    $default  reduce using rule 5 (statement)


State 31

    6 statement: constant_declaration •

    $default  reduce using rule 6 (statement)


State 32

    7 statement: extern_declartion •

    $default  reduce using rule 7 (statement)


State 33

   15 statement: function •

    $default  reduce using rule 15 (statement)


State 34

   49 function: function_prototype • OPENCURL $@2 statement CLOSEDCURL $@3

    OPENCURL  shift, and go to state 80


State 35

   16 statement: function_call •

    $default  reduce using rule 16 (statement)


State 36

    3 statement: expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 89


State 37

   69 expression: boolean_expression •

    $default  reduce using rule 69 (expression)


State 38

   70 expression: arithmetic_expression •

    $default  reduce using rule 70 (expression)


State 39

   83 arithmetic_expression: unary_expression •

    $default  reduce using rule 83 (arithmetic_expression)


State 40

   82 arithmetic_expression: binary_expression •
   86 binary_expression: binary_expression • PLUS term
   87                  | binary_expression • MINUS term

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    $default  reduce using rule 82 (arithmetic_expression)


State 41

   88 binary_expression: term •
   90 term: term • MULT factor
   91     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 88 (binary_expression)


State 42

   89 term: factor •

    $default  reduce using rule 89 (term)


State 43

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 44

    9 statement: while_statement •

    $default  reduce using rule 9 (statement)


State 45

   10 statement: do_while_statement •

    $default  reduce using rule 10 (statement)


State 46

   11 statement: for_statement •

    $default  reduce using rule 11 (statement)


State 47

   12 statement: switch_statement •

    $default  reduce using rule 12 (statement)


State 48

   13 statement: break_statement •

    $default  reduce using rule 13 (statement)


State 49

   14 statement: continue_statement •

    $default  reduce using rule 14 (statement)


State 50

   36 assignment_statement: IDENTIFIER PLUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 94
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 51

   37 assignment_statement: IDENTIFIER MINUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 95
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 52

   38 assignment_statement: IDENTIFIER MULT_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 96
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 53

   39 assignment_statement: IDENTIFIER DIV_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 97
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 54

   84 unary_expression: IDENTIFIER INC •

    $default  reduce using rule 84 (unary_expression)


State 55

   85 unary_expression: IDENTIFIER DEC •

    $default  reduce using rule 85 (unary_expression)


State 56

   35 assignment_statement: IDENTIFIER EQUAL • expression SEMICOLON
   40                     | IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    function_call          go to state 99
    expression             go to state 100
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 57

   64 function_call: IDENTIFIER OPENBRACKET • call_parameters CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 66 (call_parameters)

    value                  go to state 101
    call_parameters        go to state 102
    call_parameter         go to state 103
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 58

   44 constant_declaration: CONST type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 104


State 59

   45 extern_declartion: EXTERN type • IDENTIFIER SEMICOLON
   46                  | EXTERN type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 105


State 60

   84 unary_expression: IDENTIFIER • INC
   85                 | IDENTIFIER • DEC
   94 factor: IDENTIFIER •

    INC  shift, and go to state 54
    DEC  shift, and go to state 55

    $default  reduce using rule 94 (factor)


State 61

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
   79                   | NOT expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86

    AND  error (nonassociative)
    OR   error (nonassociative)

    $default  reduce using rule 79 (boolean_expression)


State 62

   98 if_statement: IF OPENBRACKET • value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 106
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 63

  104 while_statement: WHILE OPENBRACKET • value CLOSEDBRACKET statement

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 107
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 64

  105 do_while_statement: DO statement • WHILE OPENBRACKET value CLOSEDBRACKET SEMICOLON

    WHILE  shift, and go to state 108


State 65

  106 for_statement: FOR OPENBRACKET • for_initialization value SEMICOLON for_expression CLOSEDBRACKET statement

    IDENTIFIER   shift, and go to state 109
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23
    SEMICOLON    shift, and go to state 110

    value                  go to state 111
    type                   go to state 112
    assignment_statement   go to state 113
    var_declaration        go to state 114
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_initialization     go to state 115


State 66

  120 switch_statement: SWITCH OPENBRACKET • value CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL $@13

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 116
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 67

  125 break_statement: BREAK SEMICOLON •

    $default  reduce using rule 125 (break_statement)


State 68

  126 continue_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 126 (continue_statement)


State 69

   57 function_prototype: VOID IDENTIFIER • OPENBRACKET $@6 parameters CLOSEDBRACKET
   59                   | VOID IDENTIFIER • OPENBRACKET $@7 CLOSEDBRACKET

    OPENBRACKET  shift, and go to state 117


State 70

   22 value: STRING_VAL •

    $default  reduce using rule 22 (value)


State 71

   23 value: CHAR_VAL •

    $default  reduce using rule 23 (value)


State 72

   50 return_value: value •

    $default  reduce using rule 50 (return_value)


State 73

   19 statement: RETURN return_value • SEMICOLON

    SEMICOLON  shift, and go to state 118


State 74

   21 value: expression •
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 21 (value)


State 75

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
   95 factor: OPENBRACKET expression • CLOSEDBRACKET

    LT             shift, and go to state 81
    GT             shift, and go to state 82
    GE             shift, and go to state 83
    LE             shift, and go to state 84
    EQ_EQ          shift, and go to state 85
    NE             shift, and go to state 86
    AND            shift, and go to state 87
    OR             shift, and go to state 88
    CLOSEDBRACKET  shift, and go to state 119


State 76

   18 statement: OPENCURL $@1 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 120
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 77

    0 $accept: statements $end •

    $default  accept


State 78

    1 statements: statements statement •

    $default  reduce using rule 1 (statements)


State 79

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON
   53 function_prototype: type IDENTIFIER • OPENBRACKET $@4 parameters CLOSEDBRACKET
   55                   | type IDENTIFIER • OPENBRACKET $@5 CLOSEDBRACKET

    EQUAL        shift, and go to state 121
    OPENBRACKET  shift, and go to state 122
    SEMICOLON    shift, and go to state 123


State 80

   49 function: function_prototype OPENCURL • $@2 statement CLOSEDCURL $@3

    $default  reduce using rule 47 ($@2)

    $@2  go to state 124


State 81

   76 boolean_expression: expression LT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 125
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 82

   75 boolean_expression: expression GT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 126
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 83

   73 boolean_expression: expression GE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 127
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 84

   74 boolean_expression: expression LE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 128
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 85

   71 boolean_expression: expression EQ_EQ • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 129
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 86

   72 boolean_expression: expression NE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 130
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 87

   77 boolean_expression: expression AND • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 131
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 88

   78 boolean_expression: expression OR • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 132
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 89

    3 statement: expression SEMICOLON •

    $default  reduce using rule 3 (statement)


State 90

   86 binary_expression: binary_expression PLUS • term

    IDENTIFIER   shift, and go to state 133
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 134
    factor  go to state 42


State 91

   87 binary_expression: binary_expression MINUS • term

    IDENTIFIER   shift, and go to state 133
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 135
    factor  go to state 42


State 92

   90 term: term MULT • factor

    IDENTIFIER   shift, and go to state 133
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 136


State 93

   91 term: term DIV • factor

    IDENTIFIER   shift, and go to state 133
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 137


State 94

   36 assignment_statement: IDENTIFIER PLUS_EQ expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 138


State 95

   37 assignment_statement: IDENTIFIER MINUS_EQ expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 139


State 96

   38 assignment_statement: IDENTIFIER MULT_EQ expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 140


State 97

   39 assignment_statement: IDENTIFIER DIV_EQ expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 141


State 98

   64 function_call: IDENTIFIER • OPENBRACKET call_parameters CLOSEDBRACKET SEMICOLON
   84 unary_expression: IDENTIFIER • INC
   85                 | IDENTIFIER • DEC
   94 factor: IDENTIFIER •

    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 94 (factor)


State 99

   40 assignment_statement: IDENTIFIER EQUAL function_call •

    $default  reduce using rule 40 (assignment_statement)


State 100

   35 assignment_statement: IDENTIFIER EQUAL expression • SEMICOLON
   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 142


State 101

   68 call_parameter: value •

    $default  reduce using rule 68 (call_parameter)


State 102

   64 function_call: IDENTIFIER OPENBRACKET call_parameters • CLOSEDBRACKET SEMICOLON

    CLOSEDBRACKET  shift, and go to state 143


State 103

   65 call_parameters: call_parameter •
   67 call_parameter: call_parameter • COMMA value

    COMMA  shift, and go to state 144

    $default  reduce using rule 65 (call_parameters)


State 104

   44 constant_declaration: CONST type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL  shift, and go to state 145


State 105

   45 extern_declartion: EXTERN type IDENTIFIER • SEMICOLON
   46                  | EXTERN type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL      shift, and go to state 146
    SEMICOLON  shift, and go to state 147


State 106

   98 if_statement: IF OPENBRACKET value • CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement

    CLOSEDBRACKET  shift, and go to state 148


State 107

  104 while_statement: WHILE OPENBRACKET value • CLOSEDBRACKET statement

    CLOSEDBRACKET  shift, and go to state 149


State 108

  105 do_while_statement: DO statement WHILE • OPENBRACKET value CLOSEDBRACKET SEMICOLON

    OPENBRACKET  shift, and go to state 150


State 109

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   84 unary_expression: IDENTIFIER • INC
   85                 | IDENTIFIER • DEC
   94 factor: IDENTIFIER •

    PLUS_EQ   shift, and go to state 50
    MINUS_EQ  shift, and go to state 51
    MULT_EQ   shift, and go to state 52
    DIV_EQ    shift, and go to state 53
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 56

    $default  reduce using rule 94 (factor)


State 110

  110 for_initialization: SEMICOLON •

    $default  reduce using rule 110 (for_initialization)


State 111

  109 for_initialization: value • SEMICOLON

    SEMICOLON  shift, and go to state 151


State 112

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 152


State 113

  107 for_initialization: assignment_statement •

    $default  reduce using rule 107 (for_initialization)


State 114

  108 for_initialization: var_declaration •

    $default  reduce using rule 108 (for_initialization)


State 115

  106 for_statement: FOR OPENBRACKET for_initialization • value SEMICOLON for_expression CLOSEDBRACKET statement

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 153
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 116

  120 switch_statement: SWITCH OPENBRACKET value • CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL $@13

    CLOSEDBRACKET  shift, and go to state 154


State 117

   57 function_prototype: VOID IDENTIFIER OPENBRACKET • $@6 parameters CLOSEDBRACKET
   59                   | VOID IDENTIFIER OPENBRACKET • $@7 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 58 ($@7)
    $default       reduce using rule 56 ($@6)

    $@6  go to state 155
    $@7  go to state 156


State 118

   19 statement: RETURN return_value SEMICOLON •

    $default  reduce using rule 19 (statement)


State 119

   95 factor: OPENBRACKET expression CLOSEDBRACKET •

    $default  reduce using rule 95 (factor)


State 120

    1 statements: statements • statement
   18 statement: OPENCURL $@1 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 157
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 121

   41 var_declaration: type IDENTIFIER EQUAL • value SEMICOLON
   42                | type IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 158
    function_call          go to state 159
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 122

   53 function_prototype: type IDENTIFIER OPENBRACKET • $@4 parameters CLOSEDBRACKET
   55                   | type IDENTIFIER OPENBRACKET • $@5 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 54 ($@5)
    $default       reduce using rule 52 ($@4)

    $@4  go to state 160
    $@5  go to state 161


State 123

   43 var_declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 43 (var_declaration)


State 124

   49 function: function_prototype OPENCURL $@2 • statement CLOSEDCURL $@3

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 162
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 125

   76 boolean_expression: expression LT arithmetic_expression •

    $default  reduce using rule 76 (boolean_expression)


State 126

   75 boolean_expression: expression GT arithmetic_expression •

    $default  reduce using rule 75 (boolean_expression)


State 127

   73 boolean_expression: expression GE arithmetic_expression •

    $default  reduce using rule 73 (boolean_expression)


State 128

   74 boolean_expression: expression LE arithmetic_expression •

    $default  reduce using rule 74 (boolean_expression)


State 129

   71 boolean_expression: expression EQ_EQ arithmetic_expression •

    $default  reduce using rule 71 (boolean_expression)


State 130

   72 boolean_expression: expression NE arithmetic_expression •

    $default  reduce using rule 72 (boolean_expression)


State 131

   77 boolean_expression: expression AND arithmetic_expression •

    $default  reduce using rule 77 (boolean_expression)


State 132

   78 boolean_expression: expression OR arithmetic_expression •

    $default  reduce using rule 78 (boolean_expression)


State 133

   94 factor: IDENTIFIER •

    $default  reduce using rule 94 (factor)


State 134

   86 binary_expression: binary_expression PLUS term •
   90 term: term • MULT factor
   91     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 86 (binary_expression)


State 135

   87 binary_expression: binary_expression MINUS term •
   90 term: term • MULT factor
   91     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 87 (binary_expression)


State 136

   90 term: term MULT factor •

    $default  reduce using rule 90 (term)


State 137

   91 term: term DIV factor •

    $default  reduce using rule 91 (term)


State 138

   36 assignment_statement: IDENTIFIER PLUS_EQ expression SEMICOLON •

    $default  reduce using rule 36 (assignment_statement)


State 139

   37 assignment_statement: IDENTIFIER MINUS_EQ expression SEMICOLON •

    $default  reduce using rule 37 (assignment_statement)


State 140

   38 assignment_statement: IDENTIFIER MULT_EQ expression SEMICOLON •

    $default  reduce using rule 38 (assignment_statement)


State 141

   39 assignment_statement: IDENTIFIER DIV_EQ expression SEMICOLON •

    $default  reduce using rule 39 (assignment_statement)


State 142

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON •

    $default  reduce using rule 35 (assignment_statement)


State 143

   64 function_call: IDENTIFIER OPENBRACKET call_parameters CLOSEDBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 144

   67 call_parameter: call_parameter COMMA • value

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 164
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 145

   44 constant_declaration: CONST type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 165
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 146

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 166
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 147

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON •

    $default  reduce using rule 45 (extern_declartion)


State 148

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET • OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement

    OPENCURL  shift, and go to state 167


State 149

  104 while_statement: WHILE OPENBRACKET value CLOSEDBRACKET • statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 168
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 150

  105 do_while_statement: DO statement WHILE OPENBRACKET • value CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 169
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 151

  109 for_initialization: value SEMICOLON •

    $default  reduce using rule 109 (for_initialization)


State 152

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON

    EQUAL      shift, and go to state 121
    SEMICOLON  shift, and go to state 123


State 153

  106 for_statement: FOR OPENBRACKET for_initialization value • SEMICOLON for_expression CLOSEDBRACKET statement

    SEMICOLON  shift, and go to state 170


State 154

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET • OPENCURL $@12 case_list CLOSEDCURL $@13

    OPENCURL  shift, and go to state 171


State 155

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 172
    parameters        go to state 173
    single_parameter  go to state 174


State 156

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 175


State 157

   18 statement: OPENCURL $@1 statements CLOSEDCURL •

    $default  reduce using rule 18 (statement)


State 158

   41 var_declaration: type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 176


State 159

   42 var_declaration: type IDENTIFIER EQUAL function_call •

    $default  reduce using rule 42 (var_declaration)


State 160

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 172
    parameters        go to state 177
    single_parameter  go to state 174


State 161

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 178


State 162

   49 function: function_prototype OPENCURL $@2 statement • CLOSEDCURL $@3

    CLOSEDCURL  shift, and go to state 179


State 163

   64 function_call: IDENTIFIER OPENBRACKET call_parameters CLOSEDBRACKET SEMICOLON •

    $default  reduce using rule 64 (function_call)


State 164

   67 call_parameter: call_parameter COMMA value •

    $default  reduce using rule 67 (call_parameter)


State 165

   44 constant_declaration: CONST type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 166

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 167

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL • $@8 statements CLOSEDCURL $@9 else_if_statement

    $default  reduce using rule 96 ($@8)

    $@8  go to state 182


State 168

  104 while_statement: WHILE OPENBRACKET value CLOSEDBRACKET statement •

    $default  reduce using rule 104 (while_statement)


State 169

  105 do_while_statement: DO statement WHILE OPENBRACKET value • CLOSEDBRACKET SEMICOLON

    CLOSEDBRACKET  shift, and go to state 183


State 170

  106 for_statement: FOR OPENBRACKET for_initialization value SEMICOLON • for_expression CLOSEDBRACKET statement

    IDENTIFIER   shift, and go to state 184
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 117 (for_expression)

    value                  go to state 185
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_expression         go to state 186


State 171

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL • $@12 case_list CLOSEDCURL $@13

    $default  reduce using rule 118 ($@12)

    $@12  go to state 187


State 172

   62 single_parameter: type • IDENTIFIER
   63                 | type • IDENTIFIER EQUAL constant

    IDENTIFIER  shift, and go to state 188


State 173

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters • CLOSEDBRACKET
   60 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 190


State 174

   61 parameters: single_parameter •

    $default  reduce using rule 61 (parameters)


State 175

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET •

    $default  reduce using rule 59 (function_prototype)


State 176

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 41 (var_declaration)


State 177

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters • CLOSEDBRACKET
   60 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 191


State 178

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET •

    $default  reduce using rule 55 (function_prototype)


State 179

   49 function: function_prototype OPENCURL $@2 statement CLOSEDCURL • $@3

    $default  reduce using rule 48 ($@3)

    $@3  go to state 192


State 180

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 44 (constant_declaration)


State 181

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 46 (extern_declartion)


State 182

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 • statements CLOSEDCURL $@9 else_if_statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 193
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 183

  105 do_while_statement: DO statement WHILE OPENBRACKET value CLOSEDBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 194


State 184

   84 unary_expression: IDENTIFIER • INC
   85                 | IDENTIFIER • DEC
   94 factor: IDENTIFIER •
  111 for_expression: IDENTIFIER • EQUAL value SEMICOLON
  112               | IDENTIFIER • PLUS_EQ expression
  113               | IDENTIFIER • MINUS_EQ expression
  114               | IDENTIFIER • MULT_EQ expression
  115               | IDENTIFIER • DIV_EQ expression

    PLUS_EQ   shift, and go to state 195
    MINUS_EQ  shift, and go to state 196
    MULT_EQ   shift, and go to state 197
    DIV_EQ    shift, and go to state 198
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 199

    $default  reduce using rule 94 (factor)


State 185

  116 for_expression: value •

    $default  reduce using rule 116 (for_expression)


State 186

  106 for_statement: FOR OPENBRACKET for_initialization value SEMICOLON for_expression • CLOSEDBRACKET statement

    CLOSEDBRACKET  shift, and go to state 200


State 187

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 • case_list CLOSEDCURL $@13

    CASE     shift, and go to state 201
    DEFAULT  shift, and go to state 202

    case_list       go to state 203
    case_statement  go to state 204


State 188

   62 single_parameter: type IDENTIFIER •
   63                 | type IDENTIFIER • EQUAL constant

    EQUAL  shift, and go to state 205

    $default  reduce using rule 62 (single_parameter)


State 189

   60 parameters: parameters COMMA • single_parameter

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 172
    single_parameter  go to state 206


State 190

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET •

    $default  reduce using rule 57 (function_prototype)


State 191

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET •

    $default  reduce using rule 53 (function_prototype)


State 192

   49 function: function_prototype OPENCURL $@2 statement CLOSEDCURL $@3 •

    $default  reduce using rule 49 (function)


State 193

    1 statements: statements • statement
   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements • CLOSEDCURL $@9 else_if_statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 207
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 194

  105 do_while_statement: DO statement WHILE OPENBRACKET value CLOSEDBRACKET SEMICOLON •

    $default  reduce using rule 105 (do_while_statement)


State 195

  112 for_expression: IDENTIFIER PLUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 208
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 196

  113 for_expression: IDENTIFIER MINUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 209
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 197

  114 for_expression: IDENTIFIER MULT_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 210
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 198

  115 for_expression: IDENTIFIER DIV_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 211
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 199

  111 for_expression: IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 212
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 200

  106 for_statement: FOR OPENBRACKET for_initialization value SEMICOLON for_expression CLOSEDBRACKET • statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 213
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 201

  123 case_statement: CASE • value COLON statements

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 214
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 202

  124 case_statement: DEFAULT • COLON statements

    COLON  shift, and go to state 215


State 203

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 case_list • CLOSEDCURL $@13
  121 case_list: case_list • case_statement

    CASE        shift, and go to state 201
    DEFAULT     shift, and go to state 202
    CLOSEDCURL  shift, and go to state 216

    case_statement  go to state 217


State 204

  122 case_list: case_statement •

    $default  reduce using rule 122 (case_list)


State 205

   63 single_parameter: type IDENTIFIER EQUAL • constant

    INT_NUM     shift, and go to state 218
    FLOAT_VAL   shift, and go to state 219
    STRING_VAL  shift, and go to state 220
    TRUE_VAL    shift, and go to state 221
    FALSE_VAL   shift, and go to state 222
    CHAR_VAL    shift, and go to state 223

    constant  go to state 224


State 206

   60 parameters: parameters COMMA single_parameter •

    $default  reduce using rule 60 (parameters)


State 207

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL • $@9 else_if_statement

    $default  reduce using rule 97 ($@9)

    $@9  go to state 225


State 208

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
  112 for_expression: IDENTIFIER PLUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 112 (for_expression)


State 209

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
  113 for_expression: IDENTIFIER MINUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 113 (for_expression)


State 210

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
  114 for_expression: IDENTIFIER MULT_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 114 (for_expression)


State 211

   71 boolean_expression: expression • EQ_EQ arithmetic_expression
   72                   | expression • NE arithmetic_expression
   73                   | expression • GE arithmetic_expression
   74                   | expression • LE arithmetic_expression
   75                   | expression • GT arithmetic_expression
   76                   | expression • LT arithmetic_expression
   77                   | expression • AND arithmetic_expression
   78                   | expression • OR arithmetic_expression
  115 for_expression: IDENTIFIER DIV_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 115 (for_expression)


State 212

  111 for_expression: IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 226


State 213

  106 for_statement: FOR OPENBRACKET for_initialization value SEMICOLON for_expression CLOSEDBRACKET statement •

    $default  reduce using rule 106 (for_statement)


State 214

  123 case_statement: CASE value • COLON statements

    COLON  shift, and go to state 227


State 215

  124 case_statement: DEFAULT COLON • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 228
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 216

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL • $@13

    $default  reduce using rule 119 ($@13)

    $@13  go to state 229


State 217

  121 case_list: case_list case_statement •

    $default  reduce using rule 121 (case_list)


State 218

   29 constant: INT_NUM •

    $default  reduce using rule 29 (constant)


State 219

   30 constant: FLOAT_VAL •

    $default  reduce using rule 30 (constant)


State 220

   31 constant: STRING_VAL •

    $default  reduce using rule 31 (constant)


State 221

   32 constant: TRUE_VAL •

    $default  reduce using rule 32 (constant)


State 222

   33 constant: FALSE_VAL •

    $default  reduce using rule 33 (constant)


State 223

   34 constant: CHAR_VAL •

    $default  reduce using rule 34 (constant)


State 224

   63 single_parameter: type IDENTIFIER EQUAL constant •

    $default  reduce using rule 63 (single_parameter)


State 225

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 • else_if_statement

    ELSE  shift, and go to state 230

    $default  reduce using rule 103 (else_if_statement)

    else_if_statement  go to state 231


State 226

  111 for_expression: IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 111 (for_expression)


State 227

  123 case_statement: CASE value COLON • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 232
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 228

    1 statements: statements • statement
  124 case_statement: DEFAULT COLON statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 124 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 229

  120 switch_statement: SWITCH OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 case_list CLOSEDCURL $@13 •

    $default  reduce using rule 120 (switch_statement)


State 230

  102 else_if_statement: ELSE • OPENCURL $@11 statements CLOSEDCURL

    OPENCURL  shift, and go to state 233


State 231

   98 if_statement: IF OPENBRACKET value CLOSEDBRACKET OPENCURL $@8 statements CLOSEDCURL $@9 else_if_statement •
  100 else_if_statement: else_if_statement • ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL

    ELSEIF  shift, and go to state 234

    $default  reduce using rule 98 (if_statement)


State 232

    1 statements: statements • statement
  123 case_statement: CASE value COLON statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 123 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 233

  102 else_if_statement: ELSE OPENCURL • $@11 statements CLOSEDCURL

    $default  reduce using rule 101 ($@11)

    $@11  go to state 235


State 234

  100 else_if_statement: else_if_statement ELSEIF • OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL

    OPENBRACKET  shift, and go to state 236


State 235

  102 else_if_statement: ELSE OPENCURL $@11 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 237
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 236

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET • value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 238
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 237

    1 statements: statements • statement
  102 else_if_statement: ELSE OPENCURL $@11 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 239
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 238

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value • CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL

    CLOSEDBRACKET  shift, and go to state 240


State 239

  102 else_if_statement: ELSE OPENCURL $@11 statements CLOSEDCURL •

    $default  reduce using rule 102 (else_if_statement)


State 240

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET • OPENCURL $@10 statements CLOSEDCURL

    OPENCURL  shift, and go to state 241


State 241

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL • $@10 statements CLOSEDCURL

    $default  reduce using rule 99 ($@10)

    $@10  go to state 242


State 242

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 243
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 243

    1 statements: statements • statement
  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 244
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 244

  100 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL •

    $default  reduce using rule 100 (else_if_statement)
