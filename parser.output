Grammar

    0 $accept: statements $end

    1 statements: statements statement
    2           | statement

    3 statement: expression SEMICOLON
    4          | assignment_statement
    5          | var_declaration
    6          | constant_declaration
    7          | extern_declartion
    8          | if_statement
    9          | while_statement
   10          | do_while_statement
   11          | for_statement
   12          | switch_statement
   13          | break_statement
   14          | continue_statement
   15          | function
   16          | function_call

   17 $@1: ε

   18 statement: OPENCURL $@1 statements CLOSEDCURL
   19          | SEMICOLON

   20 value: expression
   21      | STRING_VAL
   22      | CHAR_VAL

   23 type: INT
   24     | FLOAT
   25     | CHAR
   26     | STRING
   27     | BOOL

   28 constant: INT_NUM
   29         | FLOAT_VAL
   30         | STRING_VAL
   31         | TRUE_VAL
   32         | FALSE_VAL
   33         | CHAR_VAL

   34 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON
   35                     | IDENTIFIER PLUS_EQ expression SEMICOLON
   36                     | IDENTIFIER MINUS_EQ expression SEMICOLON
   37                     | IDENTIFIER MULT_EQ expression SEMICOLON
   38                     | IDENTIFIER DIV_EQ expression SEMICOLON
   39                     | IDENTIFIER EQUAL function_call

   40 var_declaration: type IDENTIFIER EQUAL value SEMICOLON
   41                | type IDENTIFIER EQUAL function_call
   42                | type IDENTIFIER SEMICOLON

   43 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON

   44 extern_declartion: EXTERN type IDENTIFIER SEMICOLON
   45                  | EXTERN type IDENTIFIER EQUAL value SEMICOLON

   46 Return_Statement: RETURN return_value SEMICOLON
   47                 | ε

   48 $@2: ε

   49 $@3: ε

   50 function: function_prototype $@2 OPENCURL $@3 statements Return_Statement CLOSEDCURL

   51 return_value: value
   52             | ε

   53 $@4: ε

   54 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET

   55 $@5: ε

   56 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

   57 $@6: ε

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET

   59 $@7: ε

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

   61 parameters: parameters COMMA single_parameter
   62           | single_parameter

   63 single_parameter: type IDENTIFIER
   64                 | type IDENTIFIER EQUAL constant

   65 $@8: ε

   66 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON

   67 call_parameters: call_parameter
   68                | ε

   69 call_parameter: call_parameter COMMA value
   70               | value

   71 expression: boolean_expression
   72           | arithmetic_expression

   73 boolean_expression: expression EQ_EQ arithmetic_expression
   74                   | expression NE arithmetic_expression
   75                   | expression GE arithmetic_expression
   76                   | expression LE arithmetic_expression
   77                   | expression GT arithmetic_expression
   78                   | expression LT arithmetic_expression
   79                   | expression AND arithmetic_expression
   80                   | expression OR arithmetic_expression
   81                   | NOT expression
   82                   | TRUE_VAL
   83                   | FALSE_VAL

   84 arithmetic_expression: binary_expression
   85                      | unary_expression

   86 unary_expression: IDENTIFIER INC
   87                 | IDENTIFIER DEC

   88 binary_expression: binary_expression PLUS term
   89                  | binary_expression MINUS term
   90                  | term

   91 term: factor
   92     | term MULT factor
   93     | term DIV factor

   94 factor: INT_NUM
   95       | FLOAT_VAL
   96       | IDENTIFIER
   97       | OPENBRACKET expression CLOSEDBRACKET

   98 $@9: ε

   99 $@10: ε

  100 $@11: ε

  101 $@12: ε

  102 $@13: ε

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

  104 $@14: ε

  105 elsestatement: ELSE OPENCURL $@14 statements CLOSEDCURL
  106              | ε

  107 $@15: ε

  108 $@16: ε

  109 $@17: ε

  110 $@18: ε

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18
  112                  | ε

  113 $@19: ε

  114 $@20: ε

  115 $@21: ε

  116 $@22: ε

  117 $@23: ε

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 $@23

  119 $@24: ε

  120 $@25: ε

  121 $@26: ε

  122 $@27: ε

  123 $@28: ε

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

  125 $@29: ε

  126 $@30: ε

  127 $@31: ε

  128 $@32: ε

  129 $@33: ε

  130 $@34: ε

  131 $@35: ε

  132 $@36: ε

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

  134 for_initialization: assignment_statement
  135                   | var_declaration
  136                   | value SEMICOLON
  137                   | SEMICOLON

  138 for_expression: IDENTIFIER EQUAL value SEMICOLON
  139               | IDENTIFIER PLUS_EQ expression
  140               | IDENTIFIER MINUS_EQ expression
  141               | IDENTIFIER MULT_EQ expression
  142               | IDENTIFIER DIV_EQ expression
  143               | value
  144               | ε

  145 $@37: ε

  146 $@38: ε

  147 $@39: ε

  148 $@40: ε

  149 $@41: ε

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

  151 case_list: case_list case_statement
  152          | case_statement

  153 $@42: ε

  154 $@43: ε

  155 $@44: ε

  156 case_statement: CASE $@42 value $@43 COLON $@44 statements

  157 $@45: ε

  158 case_statement: DEFAULT COLON $@45 statements

  159 break_statement: BREAK SEMICOLON

  160 continue_statement: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <name> (258) 34 35 36 37 38 39 40 41 42 43 44 45 54 56 58 60 63 64 66 86 87 96 138 139 140 141 142
    INT_NUM <lexicalstruct> (259) 28 94
    FLOAT_VAL <lexicalstruct> (260) 29 95
    STRING_VAL <lexicalstruct> (261) 21 30
    TRUE_VAL <lexicalstruct> (262) 31 82
    FALSE_VAL <lexicalstruct> (263) 32 83
    CHAR_VAL <lexicalstruct> (264) 22 33
    INT <var_type> (265) 23
    FLOAT <var_type> (266) 24
    CHAR <var_type> (267) 25
    BOOL <var_type> (268) 27
    STRING <var_type> (269) 26
    CONST (270) 43
    EXTERN (271) 44 45
    PLUS (272) 88
    MINUS (273) 89
    MULT (274) 92
    DIV (275) 93
    PLUS_EQ (276) 35 139
    MINUS_EQ (277) 36 140
    MULT_EQ (278) 37 141
    DIV_EQ (279) 38 142
    INC (280) 86
    DEC (281) 87
    LT (282) 78
    GT (283) 77
    GE (284) 75
    LE (285) 76
    EQ_EQ (286) 73
    NE (287) 74
    AND (288) 79
    OR (289) 80
    NOT (290) 81
    EQUAL (291) 34 39 40 41 43 45 64 138
    IF (292) 103
    ELSEIF (293) 111
    ELSE (294) 105
    WHILE (295) 118 124
    DO (296) 124
    FOR (297) 133
    SWITCH (298) 150
    CASE (299) 156
    DEFAULT (300) 158
    BREAK (301) 159
    CONTINUE (302) 160
    VOID (303) 58 60
    RETURN (304) 46
    COMMA (305) 61 69
    COLON (306) 156 158
    OPENBRACKET (307) 54 56 58 60 66 97 103 111 118 124 133 150
    CLOSEDBRACKET (308) 54 56 58 60 66 97 103 111 118 124 133 150
    OPENCURL (309) 18 50 103 105 111 150
    CLOSEDCURL (310) 18 50 103 105 111 150
    SEMICOLON (311) 3 19 34 35 36 37 38 40 42 43 44 45 46 66 124 133 136 137 138 159 160


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    statements (58)
        on left: 1 2
        on right: 0 1 18 50 103 105 111 156 158
    statement (59)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19
        on right: 1 2 118 124 133
    $@1 (60)
        on left: 17
        on right: 18
    value <lexicalstruct> (61)
        on left: 20 21 22
        on right: 40 43 45 51 69 70 103 111 118 124 133 136 138 143 150 156
    type <var_type> (62)
        on left: 23 24 25 26 27
        on right: 40 41 42 43 44 45 54 56 63 64
    constant <lexicalstruct> (63)
        on left: 28 29 30 31 32 33
        on right: 64
    assignment_statement (64)
        on left: 34 35 36 37 38 39
        on right: 4 134
    var_declaration (65)
        on left: 40 41 42
        on right: 5 135
    constant_declaration (66)
        on left: 43
        on right: 6
    extern_declartion (67)
        on left: 44 45
        on right: 7
    Return_Statement (68)
        on left: 46 47
        on right: 50
    function (69)
        on left: 50
        on right: 15
    $@2 (70)
        on left: 48
        on right: 50
    $@3 (71)
        on left: 49
        on right: 50
    return_value <lexicalstruct> (72)
        on left: 51 52
        on right: 46
    function_prototype (73)
        on left: 54 56 58 60
        on right: 50
    $@4 (74)
        on left: 53
        on right: 54
    $@5 (75)
        on left: 55
        on right: 56
    $@6 (76)
        on left: 57
        on right: 58
    $@7 (77)
        on left: 59
        on right: 60
    parameters (78)
        on left: 61 62
        on right: 54 58 61
    single_parameter (79)
        on left: 63 64
        on right: 61 62
    function_call <lexicalstruct> (80)
        on left: 66
        on right: 16 39 41
    $@8 (81)
        on left: 65
        on right: 66
    call_parameters (82)
        on left: 67 68
        on right: 66
    call_parameter (83)
        on left: 69 70
        on right: 67 69
    expression <lexicalstruct> (84)
        on left: 71 72
        on right: 3 20 34 35 36 37 38 73 74 75 76 77 78 79 80 81 97 139 140 141 142
    boolean_expression <lexicalstruct> (85)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 71
    arithmetic_expression <lexicalstruct> (86)
        on left: 84 85
        on right: 72 73 74 75 76 77 78 79 80
    unary_expression <lexicalstruct> (87)
        on left: 86 87
        on right: 85
    binary_expression <lexicalstruct> (88)
        on left: 88 89 90
        on right: 84 88 89
    term <lexicalstruct> (89)
        on left: 91 92 93
        on right: 88 89 90 92 93
    factor <lexicalstruct> (90)
        on left: 94 95 96 97
        on right: 91 92 93
    if_statement (91)
        on left: 103
        on right: 8
    $@9 (92)
        on left: 98
        on right: 103
    $@10 (93)
        on left: 99
        on right: 103
    $@11 (94)
        on left: 100
        on right: 103
    $@12 (95)
        on left: 101
        on right: 103
    $@13 (96)
        on left: 102
        on right: 103
    elsestatement (97)
        on left: 105 106
        on right: 103
    $@14 (98)
        on left: 104
        on right: 105
    else_if_statement (99)
        on left: 111 112
        on right: 103 111
    $@15 (100)
        on left: 107
        on right: 111
    $@16 (101)
        on left: 108
        on right: 111
    $@17 (102)
        on left: 109
        on right: 111
    $@18 (103)
        on left: 110
        on right: 111
    while_statement (104)
        on left: 118
        on right: 9
    $@19 (105)
        on left: 113
        on right: 118
    $@20 (106)
        on left: 114
        on right: 118
    $@21 (107)
        on left: 115
        on right: 118
    $@22 (108)
        on left: 116
        on right: 118
    $@23 (109)
        on left: 117
        on right: 118
    do_while_statement (110)
        on left: 124
        on right: 10
    $@24 (111)
        on left: 119
        on right: 124
    $@25 (112)
        on left: 120
        on right: 124
    $@26 (113)
        on left: 121
        on right: 124
    $@27 (114)
        on left: 122
        on right: 124
    $@28 (115)
        on left: 123
        on right: 124
    for_statement (116)
        on left: 133
        on right: 11
    $@29 (117)
        on left: 125
        on right: 133
    $@30 (118)
        on left: 126
        on right: 133
    $@31 (119)
        on left: 127
        on right: 133
    $@32 (120)
        on left: 128
        on right: 133
    $@33 (121)
        on left: 129
        on right: 133
    $@34 (122)
        on left: 130
        on right: 133
    $@35 (123)
        on left: 131
        on right: 133
    $@36 (124)
        on left: 132
        on right: 133
    for_initialization (125)
        on left: 134 135 136 137
        on right: 133
    for_expression (126)
        on left: 138 139 140 141 142 143 144
        on right: 133
    switch_statement (127)
        on left: 150
        on right: 12
    $@37 (128)
        on left: 145
        on right: 150
    $@38 (129)
        on left: 146
        on right: 150
    $@39 (130)
        on left: 147
        on right: 150
    $@40 (131)
        on left: 148
        on right: 150
    $@41 (132)
        on left: 149
        on right: 150
    case_list (133)
        on left: 151 152
        on right: 150 151
    case_statement (134)
        on left: 156 158
        on right: 151 152
    $@42 (135)
        on left: 153
        on right: 156
    $@43 (136)
        on left: 154
        on right: 156
    $@44 (137)
        on left: 155
        on right: 156
    $@45 (138)
        on left: 157
        on right: 158
    break_statement (139)
        on left: 159
        on right: 13
    continue_statement (140)
        on left: 160
        on right: 14


State 0

    0 $accept: • statements $end

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 25
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 1

   34 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   35                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   36                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   38                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   39                     | IDENTIFIER • EQUAL function_call
   66 function_call: IDENTIFIER • OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    PLUS_EQ      shift, and go to state 49
    MINUS_EQ     shift, and go to state 50
    MULT_EQ      shift, and go to state 51
    DIV_EQ       shift, and go to state 52
    INC          shift, and go to state 53
    DEC          shift, and go to state 54
    EQUAL        shift, and go to state 55
    OPENBRACKET  shift, and go to state 56

    $default  reduce using rule 96 (factor)


State 2

   94 factor: INT_NUM •

    $default  reduce using rule 94 (factor)


State 3

   95 factor: FLOAT_VAL •

    $default  reduce using rule 95 (factor)


State 4

   82 boolean_expression: TRUE_VAL •

    $default  reduce using rule 82 (boolean_expression)


State 5

   83 boolean_expression: FALSE_VAL •

    $default  reduce using rule 83 (boolean_expression)


State 6

   23 type: INT •

    $default  reduce using rule 23 (type)


State 7

   24 type: FLOAT •

    $default  reduce using rule 24 (type)


State 8

   25 type: CHAR •

    $default  reduce using rule 25 (type)


State 9

   27 type: BOOL •

    $default  reduce using rule 27 (type)


State 10

   26 type: STRING •

    $default  reduce using rule 26 (type)


State 11

   43 constant_declaration: CONST • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 57


State 12

   44 extern_declartion: EXTERN • type IDENTIFIER SEMICOLON
   45                  | EXTERN • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 58


State 13

   81 boolean_expression: NOT • expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 60
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 14

  103 if_statement: IF • $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    $default  reduce using rule 98 ($@9)

    $@9  go to state 61


State 15

  118 while_statement: WHILE • $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 $@23

    $default  reduce using rule 113 ($@19)

    $@19  go to state 62


State 16

  124 do_while_statement: DO • $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    $default  reduce using rule 119 ($@24)

    $@24  go to state 63


State 17

  133 for_statement: FOR • $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 125 ($@29)

    $@29  go to state 64


State 18

  150 switch_statement: SWITCH • $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    $default  reduce using rule 145 ($@37)

    $@37  go to state 65


State 19

  159 break_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 66


State 20

  160 continue_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 21

   58 function_prototype: VOID • IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET
   60                   | VOID • IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 68


State 22

   97 factor: OPENBRACKET • expression CLOSEDBRACKET

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 69
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 23

   18 statement: OPENCURL • $@1 statements CLOSEDCURL

    $default  reduce using rule 17 ($@1)

    $@1  go to state 70


State 24

   19 statement: SEMICOLON •

    $default  reduce using rule 19 (statement)


State 25

    0 $accept: statements • $end
    1 statements: statements • statement

    $end         shift, and go to state 71
    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 26

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 27

   40 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   41                | type • IDENTIFIER EQUAL function_call
   42                | type • IDENTIFIER SEMICOLON
   54 function_prototype: type • IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET
   56                   | type • IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 73


State 28

    4 statement: assignment_statement •

    $default  reduce using rule 4 (statement)


State 29

    5 statement: var_declaration •

    $default  reduce using rule 5 (statement)


State 30

    6 statement: constant_declaration •

    $default  reduce using rule 6 (statement)


State 31

    7 statement: extern_declartion •

    $default  reduce using rule 7 (statement)


State 32

   15 statement: function •

    $default  reduce using rule 15 (statement)


State 33

   50 function: function_prototype • $@2 OPENCURL $@3 statements Return_Statement CLOSEDCURL

    $default  reduce using rule 48 ($@2)

    $@2  go to state 74


State 34

   16 statement: function_call •

    $default  reduce using rule 16 (statement)


State 35

    3 statement: expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 83


State 36

   71 expression: boolean_expression •

    $default  reduce using rule 71 (expression)


State 37

   72 expression: arithmetic_expression •

    $default  reduce using rule 72 (expression)


State 38

   85 arithmetic_expression: unary_expression •

    $default  reduce using rule 85 (arithmetic_expression)


State 39

   84 arithmetic_expression: binary_expression •
   88 binary_expression: binary_expression • PLUS term
   89                  | binary_expression • MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 84 (arithmetic_expression)


State 40

   90 binary_expression: term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87

    $default  reduce using rule 90 (binary_expression)


State 41

   91 term: factor •

    $default  reduce using rule 91 (term)


State 42

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 43

    9 statement: while_statement •

    $default  reduce using rule 9 (statement)


State 44

   10 statement: do_while_statement •

    $default  reduce using rule 10 (statement)


State 45

   11 statement: for_statement •

    $default  reduce using rule 11 (statement)


State 46

   12 statement: switch_statement •

    $default  reduce using rule 12 (statement)


State 47

   13 statement: break_statement •

    $default  reduce using rule 13 (statement)


State 48

   14 statement: continue_statement •

    $default  reduce using rule 14 (statement)


State 49

   35 assignment_statement: IDENTIFIER PLUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 88
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 50

   36 assignment_statement: IDENTIFIER MINUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 89
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 51

   37 assignment_statement: IDENTIFIER MULT_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 90
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 52

   38 assignment_statement: IDENTIFIER DIV_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 91
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 53

   86 unary_expression: IDENTIFIER INC •

    $default  reduce using rule 86 (unary_expression)


State 54

   87 unary_expression: IDENTIFIER DEC •

    $default  reduce using rule 87 (unary_expression)


State 55

   34 assignment_statement: IDENTIFIER EQUAL • expression SEMICOLON
   39                     | IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 92
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    function_call          go to state 93
    expression             go to state 94
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 56

   66 function_call: IDENTIFIER OPENBRACKET • $@8 call_parameters CLOSEDBRACKET SEMICOLON

    $default  reduce using rule 65 ($@8)

    $@8  go to state 95


State 57

   43 constant_declaration: CONST type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 96


State 58

   44 extern_declartion: EXTERN type • IDENTIFIER SEMICOLON
   45                  | EXTERN type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 97


State 59

   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    INC  shift, and go to state 53
    DEC  shift, and go to state 54

    $default  reduce using rule 96 (factor)


State 60

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
   81                   | NOT expression •

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80

    AND  error (nonassociative)
    OR   error (nonassociative)

    $default  reduce using rule 81 (boolean_expression)


State 61

  103 if_statement: IF $@9 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    OPENBRACKET  shift, and go to state 98


State 62

  118 while_statement: WHILE $@19 • $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 $@23

    $default  reduce using rule 114 ($@20)

    $@20  go to state 99


State 63

  124 do_while_statement: DO $@24 • $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    $default  reduce using rule 120 ($@25)

    $@25  go to state 100


State 64

  133 for_statement: FOR $@29 • OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    OPENBRACKET  shift, and go to state 101


State 65

  150 switch_statement: SWITCH $@37 • $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    $default  reduce using rule 146 ($@38)

    $@38  go to state 102


State 66

  159 break_statement: BREAK SEMICOLON •

    $default  reduce using rule 159 (break_statement)


State 67

  160 continue_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 160 (continue_statement)


State 68

   58 function_prototype: VOID IDENTIFIER • OPENBRACKET $@6 parameters CLOSEDBRACKET
   60                   | VOID IDENTIFIER • OPENBRACKET $@7 CLOSEDBRACKET

    OPENBRACKET  shift, and go to state 103


State 69

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
   97 factor: OPENBRACKET expression • CLOSEDBRACKET

    LT             shift, and go to state 75
    GT             shift, and go to state 76
    GE             shift, and go to state 77
    LE             shift, and go to state 78
    EQ_EQ          shift, and go to state 79
    NE             shift, and go to state 80
    AND            shift, and go to state 81
    OR             shift, and go to state 82
    CLOSEDBRACKET  shift, and go to state 104


State 70

   18 statement: OPENCURL $@1 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 105
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 71

    0 $accept: statements $end •

    $default  accept


State 72

    1 statements: statements statement •

    $default  reduce using rule 1 (statements)


State 73

   40 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   41                | type IDENTIFIER • EQUAL function_call
   42                | type IDENTIFIER • SEMICOLON
   54 function_prototype: type IDENTIFIER • OPENBRACKET $@4 parameters CLOSEDBRACKET
   56                   | type IDENTIFIER • OPENBRACKET $@5 CLOSEDBRACKET

    EQUAL        shift, and go to state 106
    OPENBRACKET  shift, and go to state 107
    SEMICOLON    shift, and go to state 108


State 74

   50 function: function_prototype $@2 • OPENCURL $@3 statements Return_Statement CLOSEDCURL

    OPENCURL  shift, and go to state 109


State 75

   78 boolean_expression: expression LT • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 110
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 76

   77 boolean_expression: expression GT • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 111
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 77

   75 boolean_expression: expression GE • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 112
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 78

   76 boolean_expression: expression LE • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 113
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 79

   73 boolean_expression: expression EQ_EQ • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 114
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 80

   74 boolean_expression: expression NE • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 115
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 81

   79 boolean_expression: expression AND • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 116
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 82

   80 boolean_expression: expression OR • arithmetic_expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    arithmetic_expression  go to state 117
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 83

    3 statement: expression SEMICOLON •

    $default  reduce using rule 3 (statement)


State 84

   88 binary_expression: binary_expression PLUS • term

    IDENTIFIER   shift, and go to state 118
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    term    go to state 119
    factor  go to state 41


State 85

   89 binary_expression: binary_expression MINUS • term

    IDENTIFIER   shift, and go to state 118
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    term    go to state 120
    factor  go to state 41


State 86

   92 term: term MULT • factor

    IDENTIFIER   shift, and go to state 118
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    factor  go to state 121


State 87

   93 term: term DIV • factor

    IDENTIFIER   shift, and go to state 118
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 22

    factor  go to state 122


State 88

   35 assignment_statement: IDENTIFIER PLUS_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 123


State 89

   36 assignment_statement: IDENTIFIER MINUS_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 124


State 90

   37 assignment_statement: IDENTIFIER MULT_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 125


State 91

   38 assignment_statement: IDENTIFIER DIV_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 126


State 92

   66 function_call: IDENTIFIER • OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    INC          shift, and go to state 53
    DEC          shift, and go to state 54
    OPENBRACKET  shift, and go to state 56

    $default  reduce using rule 96 (factor)


State 93

   39 assignment_statement: IDENTIFIER EQUAL function_call •

    $default  reduce using rule 39 (assignment_statement)


State 94

   34 assignment_statement: IDENTIFIER EQUAL expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 75
    GT         shift, and go to state 76
    GE         shift, and go to state 77
    LE         shift, and go to state 78
    EQ_EQ      shift, and go to state 79
    NE         shift, and go to state 80
    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 127


State 95

   66 function_call: IDENTIFIER OPENBRACKET $@8 • call_parameters CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    $default  reduce using rule 68 (call_parameters)

    value                  go to state 130
    call_parameters        go to state 131
    call_parameter         go to state 132
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 96

   43 constant_declaration: CONST type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL  shift, and go to state 134


State 97

   44 extern_declartion: EXTERN type IDENTIFIER • SEMICOLON
   45                  | EXTERN type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL      shift, and go to state 135
    SEMICOLON  shift, and go to state 136


State 98

  103 if_statement: IF $@9 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 137
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 99

  118 while_statement: WHILE $@19 $@20 • OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 $@23

    OPENBRACKET  shift, and go to state 138


State 100

  124 do_while_statement: DO $@24 $@25 • statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statement              go to state 139
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 101

  133 for_statement: FOR $@29 OPENBRACKET • for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    IDENTIFIER   shift, and go to state 140
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22
    SEMICOLON    shift, and go to state 141

    value                  go to state 142
    type                   go to state 143
    assignment_statement   go to state 144
    var_declaration        go to state 145
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    for_initialization     go to state 146


State 102

  150 switch_statement: SWITCH $@37 $@38 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    OPENBRACKET  shift, and go to state 147


State 103

   58 function_prototype: VOID IDENTIFIER OPENBRACKET • $@6 parameters CLOSEDBRACKET
   60                   | VOID IDENTIFIER OPENBRACKET • $@7 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 59 ($@7)
    $default       reduce using rule 57 ($@6)

    $@6  go to state 148
    $@7  go to state 149


State 104

   97 factor: OPENBRACKET expression CLOSEDBRACKET •

    $default  reduce using rule 97 (factor)


State 105

    1 statements: statements • statement
   18 statement: OPENCURL $@1 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    CLOSEDCURL   shift, and go to state 150
    SEMICOLON    shift, and go to state 24

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 106

   40 var_declaration: type IDENTIFIER EQUAL • value SEMICOLON
   41                | type IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 92
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 151
    function_call          go to state 152
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 107

   54 function_prototype: type IDENTIFIER OPENBRACKET • $@4 parameters CLOSEDBRACKET
   56                   | type IDENTIFIER OPENBRACKET • $@5 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 55 ($@5)
    $default       reduce using rule 53 ($@4)

    $@4  go to state 153
    $@5  go to state 154


State 108

   42 var_declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 42 (var_declaration)


State 109

   50 function: function_prototype $@2 OPENCURL • $@3 statements Return_Statement CLOSEDCURL

    $default  reduce using rule 49 ($@3)

    $@3  go to state 155


State 110

   78 boolean_expression: expression LT arithmetic_expression •

    $default  reduce using rule 78 (boolean_expression)


State 111

   77 boolean_expression: expression GT arithmetic_expression •

    $default  reduce using rule 77 (boolean_expression)


State 112

   75 boolean_expression: expression GE arithmetic_expression •

    $default  reduce using rule 75 (boolean_expression)


State 113

   76 boolean_expression: expression LE arithmetic_expression •

    $default  reduce using rule 76 (boolean_expression)


State 114

   73 boolean_expression: expression EQ_EQ arithmetic_expression •

    $default  reduce using rule 73 (boolean_expression)


State 115

   74 boolean_expression: expression NE arithmetic_expression •

    $default  reduce using rule 74 (boolean_expression)


State 116

   79 boolean_expression: expression AND arithmetic_expression •

    $default  reduce using rule 79 (boolean_expression)


State 117

   80 boolean_expression: expression OR arithmetic_expression •

    $default  reduce using rule 80 (boolean_expression)


State 118

   96 factor: IDENTIFIER •

    $default  reduce using rule 96 (factor)


State 119

   88 binary_expression: binary_expression PLUS term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87

    $default  reduce using rule 88 (binary_expression)


State 120

   89 binary_expression: binary_expression MINUS term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87

    $default  reduce using rule 89 (binary_expression)


State 121

   92 term: term MULT factor •

    $default  reduce using rule 92 (term)


State 122

   93 term: term DIV factor •

    $default  reduce using rule 93 (term)


State 123

   35 assignment_statement: IDENTIFIER PLUS_EQ expression SEMICOLON •

    $default  reduce using rule 35 (assignment_statement)


State 124

   36 assignment_statement: IDENTIFIER MINUS_EQ expression SEMICOLON •

    $default  reduce using rule 36 (assignment_statement)


State 125

   37 assignment_statement: IDENTIFIER MULT_EQ expression SEMICOLON •

    $default  reduce using rule 37 (assignment_statement)


State 126

   38 assignment_statement: IDENTIFIER DIV_EQ expression SEMICOLON •

    $default  reduce using rule 38 (assignment_statement)


State 127

   34 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON •

    $default  reduce using rule 34 (assignment_statement)


State 128

   21 value: STRING_VAL •

    $default  reduce using rule 21 (value)


State 129

   22 value: CHAR_VAL •

    $default  reduce using rule 22 (value)


State 130

   70 call_parameter: value •

    $default  reduce using rule 70 (call_parameter)


State 131

   66 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters • CLOSEDBRACKET SEMICOLON

    CLOSEDBRACKET  shift, and go to state 156


State 132

   67 call_parameters: call_parameter •
   69 call_parameter: call_parameter • COMMA value

    COMMA  shift, and go to state 157

    $default  reduce using rule 67 (call_parameters)


State 133

   20 value: expression •
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 20 (value)


State 134

   43 constant_declaration: CONST type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 158
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 135

   45 extern_declartion: EXTERN type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 159
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 136

   44 extern_declartion: EXTERN type IDENTIFIER SEMICOLON •

    $default  reduce using rule 44 (extern_declartion)


State 137

  103 if_statement: IF $@9 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    CLOSEDBRACKET  shift, and go to state 160


State 138

  118 while_statement: WHILE $@19 $@20 OPENBRACKET • value CLOSEDBRACKET $@21 statement $@22 $@23

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 161
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 139

  124 do_while_statement: DO $@24 $@25 statement • WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    WHILE  shift, and go to state 162


State 140

   34 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   35                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   36                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   38                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   39                     | IDENTIFIER • EQUAL function_call
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    PLUS_EQ   shift, and go to state 49
    MINUS_EQ  shift, and go to state 50
    MULT_EQ   shift, and go to state 51
    DIV_EQ    shift, and go to state 52
    INC       shift, and go to state 53
    DEC       shift, and go to state 54
    EQUAL     shift, and go to state 55

    $default  reduce using rule 96 (factor)


State 141

  137 for_initialization: SEMICOLON •

    $default  reduce using rule 137 (for_initialization)


State 142

  136 for_initialization: value • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 143

   40 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   41                | type • IDENTIFIER EQUAL function_call
   42                | type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 164


State 144

  134 for_initialization: assignment_statement •

    $default  reduce using rule 134 (for_initialization)


State 145

  135 for_initialization: var_declaration •

    $default  reduce using rule 135 (for_initialization)


State 146

  133 for_statement: FOR $@29 OPENBRACKET for_initialization • $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 126 ($@30)

    $@30  go to state 165


State 147

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 166
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 148

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 167
    parameters        go to state 168
    single_parameter  go to state 169


State 149

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 170


State 150

   18 statement: OPENCURL $@1 statements CLOSEDCURL •

    $default  reduce using rule 18 (statement)


State 151

   40 var_declaration: type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 171


State 152

   41 var_declaration: type IDENTIFIER EQUAL function_call •

    $default  reduce using rule 41 (var_declaration)


State 153

   54 function_prototype: type IDENTIFIER OPENBRACKET $@4 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 167
    parameters        go to state 172
    single_parameter  go to state 169


State 154

   56 function_prototype: type IDENTIFIER OPENBRACKET $@5 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 173


State 155

   50 function: function_prototype $@2 OPENCURL $@3 • statements Return_Statement CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 174
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 156

   66 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 157

   69 call_parameter: call_parameter COMMA • value

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 176
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 158

   43 constant_declaration: CONST type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 177


State 159

   45 extern_declartion: EXTERN type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 178


State 160

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    OPENCURL  shift, and go to state 179


State 161

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value • CLOSEDBRACKET $@21 statement $@22 $@23

    CLOSEDBRACKET  shift, and go to state 180


State 162

  124 do_while_statement: DO $@24 $@25 statement WHILE • OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    OPENBRACKET  shift, and go to state 181


State 163

  136 for_initialization: value SEMICOLON •

    $default  reduce using rule 136 (for_initialization)


State 164

   40 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   41                | type IDENTIFIER • EQUAL function_call
   42                | type IDENTIFIER • SEMICOLON

    EQUAL      shift, and go to state 106
    SEMICOLON  shift, and go to state 108


State 165

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 • value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 182
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 166

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    CLOSEDBRACKET  shift, and go to state 183


State 167

   63 single_parameter: type • IDENTIFIER
   64                 | type • IDENTIFIER EQUAL constant

    IDENTIFIER  shift, and go to state 184


State 168

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters • CLOSEDBRACKET
   61 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 185
    CLOSEDBRACKET  shift, and go to state 186


State 169

   62 parameters: single_parameter •

    $default  reduce using rule 62 (parameters)


State 170

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET •

    $default  reduce using rule 60 (function_prototype)


State 171

   40 var_declaration: type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 40 (var_declaration)


State 172

   54 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters • CLOSEDBRACKET
   61 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 185
    CLOSEDBRACKET  shift, and go to state 187


State 173

   56 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET •

    $default  reduce using rule 56 (function_prototype)


State 174

    1 statements: statements • statement
   50 function: function_prototype $@2 OPENCURL $@3 statements • Return_Statement CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 188
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    $default  reduce using rule 47 (Return_Statement)

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    Return_Statement       go to state 189
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 175

   66 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON •

    $default  reduce using rule 66 (function_call)


State 176

   69 call_parameter: call_parameter COMMA value •

    $default  reduce using rule 69 (call_parameter)


State 177

   43 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 43 (constant_declaration)


State 178

   45 extern_declartion: EXTERN type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 45 (extern_declartion)


State 179

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    $default  reduce using rule 99 ($@10)

    $@10  go to state 190


State 180

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET • $@21 statement $@22 $@23

    $default  reduce using rule 115 ($@21)

    $@21  go to state 191


State 181

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET • value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 192
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 182

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value • $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 127 ($@31)

    $@31  go to state 193


State 183

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@39 case_list CLOSEDCURL $@40 $@41

    OPENCURL  shift, and go to state 194


State 184

   63 single_parameter: type IDENTIFIER •
   64                 | type IDENTIFIER • EQUAL constant

    EQUAL  shift, and go to state 195

    $default  reduce using rule 63 (single_parameter)


State 185

   61 parameters: parameters COMMA • single_parameter

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 167
    single_parameter  go to state 196


State 186

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET •

    $default  reduce using rule 58 (function_prototype)


State 187

   54 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET •

    $default  reduce using rule 54 (function_prototype)


State 188

   46 Return_Statement: RETURN • return_value SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    $default  reduce using rule 52 (return_value)

    value                  go to state 197
    return_value           go to state 198
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 189

   50 function: function_prototype $@2 OPENCURL $@3 statements Return_Statement • CLOSEDCURL

    CLOSEDCURL  shift, and go to state 199


State 190

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 • statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 200
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 191

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 • statement $@22 $@23

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statement              go to state 201
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 192

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value • $@26 $@27 CLOSEDBRACKET SEMICOLON $@28

    $default  reduce using rule 121 ($@26)

    $@26  go to state 202


State 193

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 • $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 128 ($@32)

    $@32  go to state 203


State 194

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@39 case_list CLOSEDCURL $@40 $@41

    $default  reduce using rule 147 ($@39)

    $@39  go to state 204


State 195

   64 single_parameter: type IDENTIFIER EQUAL • constant

    INT_NUM     shift, and go to state 205
    FLOAT_VAL   shift, and go to state 206
    STRING_VAL  shift, and go to state 207
    TRUE_VAL    shift, and go to state 208
    FALSE_VAL   shift, and go to state 209
    CHAR_VAL    shift, and go to state 210

    constant  go to state 211


State 196

   61 parameters: parameters COMMA single_parameter •

    $default  reduce using rule 61 (parameters)


State 197

   51 return_value: value •

    $default  reduce using rule 51 (return_value)


State 198

   46 Return_Statement: RETURN return_value • SEMICOLON

    SEMICOLON  shift, and go to state 212


State 199

   50 function: function_prototype $@2 OPENCURL $@3 statements Return_Statement CLOSEDCURL •

    $default  reduce using rule 50 (function)


State 200

    1 statements: statements • statement
  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements • $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    $default  reduce using rule 100 ($@11)

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    $@11                   go to state 213
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 201

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement • $@22 $@23

    $default  reduce using rule 116 ($@22)

    $@22  go to state 214


State 202

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 • $@27 CLOSEDBRACKET SEMICOLON $@28

    $default  reduce using rule 122 ($@27)

    $@27  go to state 215


State 203

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 • $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 129 ($@33)

    $@33  go to state 216


State 204

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 • case_list CLOSEDCURL $@40 $@41

    CASE     shift, and go to state 217
    DEFAULT  shift, and go to state 218

    case_list       go to state 219
    case_statement  go to state 220


State 205

   28 constant: INT_NUM •

    $default  reduce using rule 28 (constant)


State 206

   29 constant: FLOAT_VAL •

    $default  reduce using rule 29 (constant)


State 207

   30 constant: STRING_VAL •

    $default  reduce using rule 30 (constant)


State 208

   31 constant: TRUE_VAL •

    $default  reduce using rule 31 (constant)


State 209

   32 constant: FALSE_VAL •

    $default  reduce using rule 32 (constant)


State 210

   33 constant: CHAR_VAL •

    $default  reduce using rule 33 (constant)


State 211

   64 single_parameter: type IDENTIFIER EQUAL constant •

    $default  reduce using rule 64 (single_parameter)


State 212

   46 Return_Statement: RETURN return_value SEMICOLON •

    $default  reduce using rule 46 (Return_Statement)


State 213

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 • CLOSEDCURL $@12 else_if_statement elsestatement $@13

    CLOSEDCURL  shift, and go to state 221


State 214

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 • $@23

    $default  reduce using rule 117 ($@23)

    $@23  go to state 222


State 215

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 • CLOSEDBRACKET SEMICOLON $@28

    CLOSEDBRACKET  shift, and go to state 223


State 216

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 • SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    SEMICOLON  shift, and go to state 224


State 217

  156 case_statement: CASE • $@42 value $@43 COLON $@44 statements

    $default  reduce using rule 153 ($@42)

    $@42  go to state 225


State 218

  158 case_statement: DEFAULT • COLON $@45 statements

    COLON  shift, and go to state 226


State 219

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list • CLOSEDCURL $@40 $@41
  151 case_list: case_list • case_statement

    CASE        shift, and go to state 217
    DEFAULT     shift, and go to state 218
    CLOSEDCURL  shift, and go to state 227

    case_statement  go to state 228


State 220

  152 case_list: case_statement •

    $default  reduce using rule 152 (case_list)


State 221

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL • $@12 else_if_statement elsestatement $@13

    $default  reduce using rule 101 ($@12)

    $@12  go to state 229


State 222

  118 while_statement: WHILE $@19 $@20 OPENBRACKET value CLOSEDBRACKET $@21 statement $@22 $@23 •

    $default  reduce using rule 118 (while_statement)


State 223

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET • SEMICOLON $@28

    SEMICOLON  shift, and go to state 230


State 224

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON • $@34 for_expression CLOSEDBRACKET statement $@35 $@36

    $default  reduce using rule 130 ($@34)

    $@34  go to state 231


State 225

  156 case_statement: CASE $@42 • value $@43 COLON $@44 statements

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 232
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 226

  158 case_statement: DEFAULT COLON • $@45 statements

    $default  reduce using rule 157 ($@45)

    $@45  go to state 233


State 227

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL • $@40 $@41

    $default  reduce using rule 148 ($@40)

    $@40  go to state 234


State 228

  151 case_list: case_list case_statement •

    $default  reduce using rule 151 (case_list)


State 229

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 • else_if_statement elsestatement $@13

    $default  reduce using rule 112 (else_if_statement)

    else_if_statement  go to state 235


State 230

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON • $@28

    $default  reduce using rule 123 ($@28)

    $@28  go to state 236


State 231

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 • for_expression CLOSEDBRACKET statement $@35 $@36

    IDENTIFIER   shift, and go to state 237
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    $default  reduce using rule 144 (for_expression)

    value                  go to state 238
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    for_expression         go to state 239


State 232

  156 case_statement: CASE $@42 value • $@43 COLON $@44 statements

    $default  reduce using rule 154 ($@43)

    $@43  go to state 240


State 233

  158 case_statement: DEFAULT COLON $@45 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 241
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 234

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 • $@41

    $default  reduce using rule 149 ($@41)

    $@41  go to state 242


State 235

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement • elsestatement $@13
  111 else_if_statement: else_if_statement • ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    ELSEIF  shift, and go to state 243
    ELSE    shift, and go to state 244

    $default  reduce using rule 106 (elsestatement)

    elsestatement  go to state 245


State 236

  124 do_while_statement: DO $@24 $@25 statement WHILE OPENBRACKET value $@26 $@27 CLOSEDBRACKET SEMICOLON $@28 •

    $default  reduce using rule 124 (do_while_statement)


State 237

   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •
  138 for_expression: IDENTIFIER • EQUAL value SEMICOLON
  139               | IDENTIFIER • PLUS_EQ expression
  140               | IDENTIFIER • MINUS_EQ expression
  141               | IDENTIFIER • MULT_EQ expression
  142               | IDENTIFIER • DIV_EQ expression

    PLUS_EQ   shift, and go to state 246
    MINUS_EQ  shift, and go to state 247
    MULT_EQ   shift, and go to state 248
    DIV_EQ    shift, and go to state 249
    INC       shift, and go to state 53
    DEC       shift, and go to state 54
    EQUAL     shift, and go to state 250

    $default  reduce using rule 96 (factor)


State 238

  143 for_expression: value •

    $default  reduce using rule 143 (for_expression)


State 239

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression • CLOSEDBRACKET statement $@35 $@36

    CLOSEDBRACKET  shift, and go to state 251


State 240

  156 case_statement: CASE $@42 value $@43 • COLON $@44 statements

    COLON  shift, and go to state 252


State 241

    1 statements: statements • statement
  158 case_statement: DEFAULT COLON $@45 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    $default  reduce using rule 158 (case_statement)

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 242

  150 switch_statement: SWITCH $@37 $@38 OPENBRACKET value CLOSEDBRACKET OPENCURL $@39 case_list CLOSEDCURL $@40 $@41 •

    $default  reduce using rule 150 (switch_statement)


State 243

  111 else_if_statement: else_if_statement ELSEIF • $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    $default  reduce using rule 107 ($@15)

    $@15  go to state 253


State 244

  105 elsestatement: ELSE • OPENCURL $@14 statements CLOSEDCURL

    OPENCURL  shift, and go to state 254


State 245

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement • $@13

    $default  reduce using rule 102 ($@13)

    $@13  go to state 255


State 246

  139 for_expression: IDENTIFIER PLUS_EQ • expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 256
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 247

  140 for_expression: IDENTIFIER MINUS_EQ • expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 257
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 248

  141 for_expression: IDENTIFIER MULT_EQ • expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 258
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 249

  142 for_expression: IDENTIFIER DIV_EQ • expression

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    expression             go to state 259
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 250

  138 for_expression: IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 260
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 251

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET • statement $@35 $@36

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statement              go to state 261
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 252

  156 case_statement: CASE $@42 value $@43 COLON • $@44 statements

    $default  reduce using rule 155 ($@44)

    $@44  go to state 262


State 253

  111 else_if_statement: else_if_statement ELSEIF $@15 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    OPENBRACKET  shift, and go to state 263


State 254

  105 elsestatement: ELSE OPENCURL • $@14 statements CLOSEDCURL

    $default  reduce using rule 104 ($@14)

    $@14  go to state 264


State 255

  103 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements $@11 CLOSEDCURL $@12 else_if_statement elsestatement $@13 •

    $default  reduce using rule 103 (if_statement)


State 256

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  139 for_expression: IDENTIFIER PLUS_EQ expression •

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 139 (for_expression)


State 257

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  140 for_expression: IDENTIFIER MINUS_EQ expression •

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 140 (for_expression)


State 258

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  141 for_expression: IDENTIFIER MULT_EQ expression •

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 141 (for_expression)


State 259

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  142 for_expression: IDENTIFIER DIV_EQ expression •

    LT     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    LE     shift, and go to state 78
    EQ_EQ  shift, and go to state 79
    NE     shift, and go to state 80
    AND    shift, and go to state 81
    OR     shift, and go to state 82

    $default  reduce using rule 142 (for_expression)


State 260

  138 for_expression: IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 265


State 261

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement • $@35 $@36

    $default  reduce using rule 131 ($@35)

    $@35  go to state 266


State 262

  156 case_statement: CASE $@42 value $@43 COLON $@44 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 267
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 263

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    IDENTIFIER   shift, and go to state 59
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 128
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 129
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 22

    value                  go to state 268
    expression             go to state 133
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41


State 264

  105 elsestatement: ELSE OPENCURL $@14 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 269
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 265

  138 for_expression: IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 138 (for_expression)


State 266

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 • $@36

    $default  reduce using rule 132 ($@36)

    $@36  go to state 270


State 267

    1 statements: statements • statement
  156 case_statement: CASE $@42 value $@43 COLON $@44 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    $default  reduce using rule 156 (case_statement)

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 268

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    CLOSEDBRACKET  shift, and go to state 271


State 269

    1 statements: statements • statement
  105 elsestatement: ELSE OPENCURL $@14 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    CLOSEDCURL   shift, and go to state 272
    SEMICOLON    shift, and go to state 24

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 270

  133 for_statement: FOR $@29 OPENBRACKET for_initialization $@30 value $@31 $@32 $@33 SEMICOLON $@34 for_expression CLOSEDBRACKET statement $@35 $@36 •

    $default  reduce using rule 133 (for_statement)


State 271

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@16 statements $@17 CLOSEDCURL $@18

    OPENCURL  shift, and go to state 273


State 272

  105 elsestatement: ELSE OPENCURL $@14 statements CLOSEDCURL •

    $default  reduce using rule 105 (elsestatement)


State 273

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@16 statements $@17 CLOSEDCURL $@18

    $default  reduce using rule 108 ($@16)

    $@16  go to state 274


State 274

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 • statements $@17 CLOSEDCURL $@18

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    statements             go to state 275
    statement              go to state 26
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 275

    1 statements: statements • statement
  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements • $@17 CLOSEDCURL $@18

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    OPENBRACKET  shift, and go to state 22
    OPENCURL     shift, and go to state 23
    SEMICOLON    shift, and go to state 24

    $default  reduce using rule 109 ($@17)

    statement              go to state 72
    type                   go to state 27
    assignment_statement   go to state 28
    var_declaration        go to state 29
    constant_declaration   go to state 30
    extern_declartion      go to state 31
    function               go to state 32
    function_prototype     go to state 33
    function_call          go to state 34
    expression             go to state 35
    boolean_expression     go to state 36
    arithmetic_expression  go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    term                   go to state 40
    factor                 go to state 41
    if_statement           go to state 42
    $@17                   go to state 276
    while_statement        go to state 43
    do_while_statement     go to state 44
    for_statement          go to state 45
    switch_statement       go to state 46
    break_statement        go to state 47
    continue_statement     go to state 48


State 276

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 • CLOSEDCURL $@18

    CLOSEDCURL  shift, and go to state 277


State 277

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL • $@18

    $default  reduce using rule 110 ($@18)

    $@18  go to state 278


State 278

  111 else_if_statement: else_if_statement ELSEIF $@15 OPENBRACKET value CLOSEDBRACKET OPENCURL $@16 statements $@17 CLOSEDCURL $@18 •

    $default  reduce using rule 111 (else_if_statement)
