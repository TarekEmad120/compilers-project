Nonterminals useless in grammar

    Return_Statement


Rules useless in grammar

  166 Return_Statement: ε
  167                 | ε


Grammar

    0 $accept: statements $end

    1 statements: statements statement
    2           | statement

    3 statement: expression SEMICOLON
    4          | assignment_statement
    5          | var_declaration
    6          | constant_declaration
    7          | extern_declartion
    8          | if_statement
    9          | while_statement
   10          | do_while_statement
   11          | for_statement
   12          | switch_statement
   13          | break_statement
   14          | continue_statement
   15          | function
   16          | function_call

   17 $@1: ε

   18 statement: OPENCURL $@1 statements CLOSEDCURL
   19          | RETURN return_value SEMICOLON
   20          | SEMICOLON

   21 value: expression
   22      | STRING_VAL
   23      | CHAR_VAL

   24 type: INT
   25     | FLOAT
   26     | CHAR
   27     | STRING
   28     | BOOL

   29 constant: INT_NUM
   30         | FLOAT_VAL
   31         | STRING_VAL
   32         | TRUE_VAL
   33         | FALSE_VAL
   34         | CHAR_VAL

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON
   36                     | IDENTIFIER PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER EQUAL function_call

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON
   42                | type IDENTIFIER EQUAL function_call
   43                | type IDENTIFIER SEMICOLON

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON
   46                  | EXTERN type IDENTIFIER EQUAL value SEMICOLON

   47 $@2: ε

   48 $@3: ε

   49 $@4: ε

   50 function: function_prototype $@2 OPENCURL $@3 statements $@4 CLOSEDCURL

   51 return_value: value
   52             | ε

   53 $@5: ε

   54 function_prototype: type IDENTIFIER OPENBRACKET $@5 parameters CLOSEDBRACKET

   55 $@6: ε

   56 function_prototype: type IDENTIFIER OPENBRACKET $@6 CLOSEDBRACKET

   57 $@7: ε

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 parameters CLOSEDBRACKET

   59 $@8: ε

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@8 CLOSEDBRACKET

   61 parameters: parameters COMMA single_parameter
   62           | single_parameter

   63 single_parameter: type IDENTIFIER
   64                 | type IDENTIFIER EQUAL constant

   65 $@9: ε

   66 function_call: IDENTIFIER OPENBRACKET $@9 call_parameters CLOSEDBRACKET SEMICOLON

   67 call_parameters: call_parameter
   68                | ε

   69 call_parameter: call_parameter COMMA value
   70               | value

   71 expression: boolean_expression
   72           | arithmetic_expression

   73 boolean_expression: expression EQ_EQ arithmetic_expression
   74                   | expression NE arithmetic_expression
   75                   | expression GE arithmetic_expression
   76                   | expression LE arithmetic_expression
   77                   | expression GT arithmetic_expression
   78                   | expression LT arithmetic_expression
   79                   | expression AND arithmetic_expression
   80                   | expression OR arithmetic_expression
   81                   | NOT expression
   82                   | TRUE_VAL
   83                   | FALSE_VAL

   84 arithmetic_expression: binary_expression
   85                      | unary_expression

   86 unary_expression: IDENTIFIER INC
   87                 | IDENTIFIER DEC

   88 binary_expression: binary_expression PLUS term
   89                  | binary_expression MINUS term
   90                  | term

   91 term: factor
   92     | term MULT factor
   93     | term DIV factor

   94 factor: INT_NUM
   95       | FLOAT_VAL
   96       | IDENTIFIER
   97       | OPENBRACKET expression CLOSEDBRACKET

   98 $@10: ε

   99 $@11: ε

  100 $@12: ε

  101 $@13: ε

  102 $@14: ε

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

  104 $@15: ε

  105 elsestatement: ELSE OPENCURL $@15 statements CLOSEDCURL
  106              | ε

  107 $@16: ε

  108 $@17: ε

  109 $@18: ε

  110 $@19: ε

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19
  112                  | ε

  113 $@20: ε

  114 $@21: ε

  115 $@22: ε

  116 $@23: ε

  117 $@24: ε

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 $@24

  119 $@25: ε

  120 $@26: ε

  121 $@27: ε

  122 $@28: ε

  123 $@29: ε

  124 $@30: ε

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

  126 $@31: ε

  127 $@32: ε

  128 $@33: ε

  129 $@34: ε

  130 $@35: ε

  131 $@36: ε

  132 $@37: ε

  133 $@38: ε

  134 $@39: ε

  135 $@40: ε

  136 $@41: ε

  137 $@42: ε

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

  139 for_initialization: assignment_statement
  140                   | var_declaration
  141                   | value SEMICOLON
  142                   | SEMICOLON

  143 for_expression: IDENTIFIER EQUAL value SEMICOLON
  144               | IDENTIFIER PLUS_EQ expression
  145               | IDENTIFIER MINUS_EQ expression
  146               | IDENTIFIER MULT_EQ expression
  147               | IDENTIFIER DIV_EQ expression
  148               | value
  149               | ε

  150 $@43: ε

  151 $@44: ε

  152 $@45: ε

  153 $@46: ε

  154 $@47: ε

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

  156 case_list: case_list case_statement
  157          | case_statement

  158 $@48: ε

  159 $@49: ε

  160 $@50: ε

  161 case_statement: CASE $@48 value $@49 COLON $@50 statements

  162 $@51: ε

  163 case_statement: DEFAULT COLON $@51 statements

  164 break_statement: BREAK SEMICOLON

  165 continue_statement: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <name> (258) 35 36 37 38 39 40 41 42 43 44 45 46 54 56 58 60 63 64 66 86 87 96 143 144 145 146 147
    INT_NUM <lexicalstruct> (259) 29 94
    FLOAT_VAL <lexicalstruct> (260) 30 95
    STRING_VAL <lexicalstruct> (261) 22 31
    TRUE_VAL <lexicalstruct> (262) 32 82
    FALSE_VAL <lexicalstruct> (263) 33 83
    CHAR_VAL <lexicalstruct> (264) 23 34
    INT <var_type> (265) 24
    FLOAT <var_type> (266) 25
    CHAR <var_type> (267) 26
    BOOL <var_type> (268) 28
    STRING <var_type> (269) 27
    CONST (270) 44
    EXTERN (271) 45 46
    PLUS (272) 88
    MINUS (273) 89
    MULT (274) 92
    DIV (275) 93
    PLUS_EQ (276) 36 144
    MINUS_EQ (277) 37 145
    MULT_EQ (278) 38 146
    DIV_EQ (279) 39 147
    INC (280) 86
    DEC (281) 87
    LT (282) 78
    GT (283) 77
    GE (284) 75
    LE (285) 76
    EQ_EQ (286) 73
    NE (287) 74
    AND (288) 79
    OR (289) 80
    NOT (290) 81
    EQUAL (291) 35 40 41 42 44 46 64 143
    IF (292) 103
    ELSEIF (293) 111
    ELSE (294) 105
    WHILE (295) 118 125
    DO (296) 125
    FOR (297) 138
    SWITCH (298) 155
    CASE (299) 161
    DEFAULT (300) 163
    BREAK (301) 164
    CONTINUE (302) 165
    VOID (303) 58 60
    RETURN (304) 19
    COMMA (305) 61 69
    COLON (306) 161 163
    OPENBRACKET (307) 54 56 58 60 66 97 103 111 118 125 138 155
    CLOSEDBRACKET (308) 54 56 58 60 66 97 103 111 118 125 138 155
    OPENCURL (309) 18 50 103 105 111 155
    CLOSEDCURL (310) 18 50 103 105 111 155
    SEMICOLON (311) 3 19 20 35 36 37 38 39 41 43 44 45 46 66 125 138 141 142 143 164 165


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    statements (58)
        on left: 1 2
        on right: 0 1 18 50 103 105 111 161 163
    statement (59)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20
        on right: 1 2 118 125 138
    $@1 (60)
        on left: 17
        on right: 18
    value <lexicalstruct> (61)
        on left: 21 22 23
        on right: 41 44 46 51 69 70 103 111 118 125 138 141 143 148 155 161
    type <var_type> (62)
        on left: 24 25 26 27 28
        on right: 41 42 43 44 45 46 54 56 63 64
    constant <lexicalstruct> (63)
        on left: 29 30 31 32 33 34
        on right: 64
    assignment_statement (64)
        on left: 35 36 37 38 39 40
        on right: 4 139
    var_declaration (65)
        on left: 41 42 43
        on right: 5 140
    constant_declaration (66)
        on left: 44
        on right: 6
    extern_declartion (67)
        on left: 45 46
        on right: 7
    function (68)
        on left: 50
        on right: 15
    $@2 (69)
        on left: 47
        on right: 50
    $@3 (70)
        on left: 48
        on right: 50
    $@4 (71)
        on left: 49
        on right: 50
    return_value <lexicalstruct> (72)
        on left: 51 52
        on right: 19
    function_prototype (73)
        on left: 54 56 58 60
        on right: 50
    $@5 (74)
        on left: 53
        on right: 54
    $@6 (75)
        on left: 55
        on right: 56
    $@7 (76)
        on left: 57
        on right: 58
    $@8 (77)
        on left: 59
        on right: 60
    parameters (78)
        on left: 61 62
        on right: 54 58 61
    single_parameter (79)
        on left: 63 64
        on right: 61 62
    function_call <lexicalstruct> (80)
        on left: 66
        on right: 16 40 42
    $@9 (81)
        on left: 65
        on right: 66
    call_parameters (82)
        on left: 67 68
        on right: 66
    call_parameter (83)
        on left: 69 70
        on right: 67 69
    expression <lexicalstruct> (84)
        on left: 71 72
        on right: 3 21 35 36 37 38 39 73 74 75 76 77 78 79 80 81 97 144 145 146 147
    boolean_expression <lexicalstruct> (85)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 71
    arithmetic_expression <lexicalstruct> (86)
        on left: 84 85
        on right: 72 73 74 75 76 77 78 79 80
    unary_expression <lexicalstruct> (87)
        on left: 86 87
        on right: 85
    binary_expression <lexicalstruct> (88)
        on left: 88 89 90
        on right: 84 88 89
    term <lexicalstruct> (89)
        on left: 91 92 93
        on right: 88 89 90 92 93
    factor <lexicalstruct> (90)
        on left: 94 95 96 97
        on right: 91 92 93
    if_statement (91)
        on left: 103
        on right: 8
    $@10 (92)
        on left: 98
        on right: 103
    $@11 (93)
        on left: 99
        on right: 103
    $@12 (94)
        on left: 100
        on right: 103
    $@13 (95)
        on left: 101
        on right: 103
    $@14 (96)
        on left: 102
        on right: 103
    elsestatement (97)
        on left: 105 106
        on right: 103
    $@15 (98)
        on left: 104
        on right: 105
    else_if_statement (99)
        on left: 111 112
        on right: 103 111
    $@16 (100)
        on left: 107
        on right: 111
    $@17 (101)
        on left: 108
        on right: 111
    $@18 (102)
        on left: 109
        on right: 111
    $@19 (103)
        on left: 110
        on right: 111
    while_statement (104)
        on left: 118
        on right: 9
    $@20 (105)
        on left: 113
        on right: 118
    $@21 (106)
        on left: 114
        on right: 118
    $@22 (107)
        on left: 115
        on right: 118
    $@23 (108)
        on left: 116
        on right: 118
    $@24 (109)
        on left: 117
        on right: 118
    do_while_statement (110)
        on left: 125
        on right: 10
    $@25 (111)
        on left: 119
        on right: 125
    $@26 (112)
        on left: 120
        on right: 125
    $@27 (113)
        on left: 121
        on right: 125
    $@28 (114)
        on left: 122
        on right: 125
    $@29 (115)
        on left: 123
        on right: 125
    $@30 (116)
        on left: 124
        on right: 125
    for_statement (117)
        on left: 138
        on right: 11
    $@31 (118)
        on left: 126
        on right: 138
    $@32 (119)
        on left: 127
        on right: 138
    $@33 (120)
        on left: 128
        on right: 138
    $@34 (121)
        on left: 129
        on right: 138
    $@35 (122)
        on left: 130
        on right: 138
    $@36 (123)
        on left: 131
        on right: 138
    $@37 (124)
        on left: 132
        on right: 138
    $@38 (125)
        on left: 133
        on right: 138
    $@39 (126)
        on left: 134
        on right: 138
    $@40 (127)
        on left: 135
        on right: 138
    $@41 (128)
        on left: 136
        on right: 138
    $@42 (129)
        on left: 137
        on right: 138
    for_initialization (130)
        on left: 139 140 141 142
        on right: 138
    for_expression (131)
        on left: 143 144 145 146 147 148 149
        on right: 138
    switch_statement (132)
        on left: 155
        on right: 12
    $@43 (133)
        on left: 150
        on right: 155
    $@44 (134)
        on left: 151
        on right: 155
    $@45 (135)
        on left: 152
        on right: 155
    $@46 (136)
        on left: 153
        on right: 155
    $@47 (137)
        on left: 154
        on right: 155
    case_list (138)
        on left: 156 157
        on right: 155 156
    case_statement (139)
        on left: 161 163
        on right: 156 157
    $@48 (140)
        on left: 158
        on right: 161
    $@49 (141)
        on left: 159
        on right: 161
    $@50 (142)
        on left: 160
        on right: 161
    $@51 (143)
        on left: 162
        on right: 163
    break_statement (144)
        on left: 164
        on right: 13
    continue_statement (145)
        on left: 165
        on right: 14


State 0

    0 $accept: • statements $end

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 26
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 1

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   66 function_call: IDENTIFIER • OPENBRACKET $@9 call_parameters CLOSEDBRACKET SEMICOLON
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    PLUS_EQ      shift, and go to state 50
    MINUS_EQ     shift, and go to state 51
    MULT_EQ      shift, and go to state 52
    DIV_EQ       shift, and go to state 53
    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    EQUAL        shift, and go to state 56
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 96 (factor)


State 2

   94 factor: INT_NUM •

    $default  reduce using rule 94 (factor)


State 3

   95 factor: FLOAT_VAL •

    $default  reduce using rule 95 (factor)


State 4

   82 boolean_expression: TRUE_VAL •

    $default  reduce using rule 82 (boolean_expression)


State 5

   83 boolean_expression: FALSE_VAL •

    $default  reduce using rule 83 (boolean_expression)


State 6

   24 type: INT •

    $default  reduce using rule 24 (type)


State 7

   25 type: FLOAT •

    $default  reduce using rule 25 (type)


State 8

   26 type: CHAR •

    $default  reduce using rule 26 (type)


State 9

   28 type: BOOL •

    $default  reduce using rule 28 (type)


State 10

   27 type: STRING •

    $default  reduce using rule 27 (type)


State 11

   44 constant_declaration: CONST • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 58


State 12

   45 extern_declartion: EXTERN • type IDENTIFIER SEMICOLON
   46                  | EXTERN • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 59


State 13

   81 boolean_expression: NOT • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 61
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 14

  103 if_statement: IF • $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    $default  reduce using rule 98 ($@10)

    $@10  go to state 62


State 15

  118 while_statement: WHILE • $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 $@24

    $default  reduce using rule 113 ($@20)

    $@20  go to state 63


State 16

  125 do_while_statement: DO • $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    $default  reduce using rule 119 ($@25)

    $@25  go to state 64


State 17

  138 for_statement: FOR • $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 126 ($@31)

    $@31  go to state 65


State 18

  155 switch_statement: SWITCH • $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    $default  reduce using rule 150 ($@43)

    $@43  go to state 66


State 19

  164 break_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 20

  165 continue_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 68


State 21

   58 function_prototype: VOID • IDENTIFIER OPENBRACKET $@7 parameters CLOSEDBRACKET
   60                   | VOID • IDENTIFIER OPENBRACKET $@8 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 69


State 22

   19 statement: RETURN • return_value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 52 (return_value)

    value                  go to state 72
    return_value           go to state 73
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 23

   97 factor: OPENBRACKET • expression CLOSEDBRACKET

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 75
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 24

   18 statement: OPENCURL • $@1 statements CLOSEDCURL

    $default  reduce using rule 17 ($@1)

    $@1  go to state 76


State 25

   20 statement: SEMICOLON •

    $default  reduce using rule 20 (statement)


State 26

    0 $accept: statements • $end
    1 statements: statements • statement

    $end         shift, and go to state 77
    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 27

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 28

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON
   54 function_prototype: type • IDENTIFIER OPENBRACKET $@5 parameters CLOSEDBRACKET
   56                   | type • IDENTIFIER OPENBRACKET $@6 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 79


State 29

    4 statement: assignment_statement •

    $default  reduce using rule 4 (statement)


State 30

    5 statement: var_declaration •

    $default  reduce using rule 5 (statement)


State 31

    6 statement: constant_declaration •

    $default  reduce using rule 6 (statement)


State 32

    7 statement: extern_declartion •

    $default  reduce using rule 7 (statement)


State 33

   15 statement: function •

    $default  reduce using rule 15 (statement)


State 34

   50 function: function_prototype • $@2 OPENCURL $@3 statements $@4 CLOSEDCURL

    $default  reduce using rule 47 ($@2)

    $@2  go to state 80


State 35

   16 statement: function_call •

    $default  reduce using rule 16 (statement)


State 36

    3 statement: expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 89


State 37

   71 expression: boolean_expression •

    $default  reduce using rule 71 (expression)


State 38

   72 expression: arithmetic_expression •

    $default  reduce using rule 72 (expression)


State 39

   85 arithmetic_expression: unary_expression •

    $default  reduce using rule 85 (arithmetic_expression)


State 40

   84 arithmetic_expression: binary_expression •
   88 binary_expression: binary_expression • PLUS term
   89                  | binary_expression • MINUS term

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    $default  reduce using rule 84 (arithmetic_expression)


State 41

   90 binary_expression: term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 90 (binary_expression)


State 42

   91 term: factor •

    $default  reduce using rule 91 (term)


State 43

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 44

    9 statement: while_statement •

    $default  reduce using rule 9 (statement)


State 45

   10 statement: do_while_statement •

    $default  reduce using rule 10 (statement)


State 46

   11 statement: for_statement •

    $default  reduce using rule 11 (statement)


State 47

   12 statement: switch_statement •

    $default  reduce using rule 12 (statement)


State 48

   13 statement: break_statement •

    $default  reduce using rule 13 (statement)


State 49

   14 statement: continue_statement •

    $default  reduce using rule 14 (statement)


State 50

   36 assignment_statement: IDENTIFIER PLUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 94
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 51

   37 assignment_statement: IDENTIFIER MINUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 95
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 52

   38 assignment_statement: IDENTIFIER MULT_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 96
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 53

   39 assignment_statement: IDENTIFIER DIV_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 97
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 54

   86 unary_expression: IDENTIFIER INC •

    $default  reduce using rule 86 (unary_expression)


State 55

   87 unary_expression: IDENTIFIER DEC •

    $default  reduce using rule 87 (unary_expression)


State 56

   35 assignment_statement: IDENTIFIER EQUAL • expression SEMICOLON
   40                     | IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    function_call          go to state 99
    expression             go to state 100
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 57

   66 function_call: IDENTIFIER OPENBRACKET • $@9 call_parameters CLOSEDBRACKET SEMICOLON

    $default  reduce using rule 65 ($@9)

    $@9  go to state 101


State 58

   44 constant_declaration: CONST type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 102


State 59

   45 extern_declartion: EXTERN type • IDENTIFIER SEMICOLON
   46                  | EXTERN type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 103


State 60

   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    INC  shift, and go to state 54
    DEC  shift, and go to state 55

    $default  reduce using rule 96 (factor)


State 61

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
   81                   | NOT expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86

    AND  error (nonassociative)
    OR   error (nonassociative)

    $default  reduce using rule 81 (boolean_expression)


State 62

  103 if_statement: IF $@10 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    OPENBRACKET  shift, and go to state 104


State 63

  118 while_statement: WHILE $@20 • $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 $@24

    $default  reduce using rule 114 ($@21)

    $@21  go to state 105


State 64

  125 do_while_statement: DO $@25 • $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    $default  reduce using rule 120 ($@26)

    $@26  go to state 106


State 65

  138 for_statement: FOR $@31 • OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    OPENBRACKET  shift, and go to state 107


State 66

  155 switch_statement: SWITCH $@43 • $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    $default  reduce using rule 151 ($@44)

    $@44  go to state 108


State 67

  164 break_statement: BREAK SEMICOLON •

    $default  reduce using rule 164 (break_statement)


State 68

  165 continue_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 165 (continue_statement)


State 69

   58 function_prototype: VOID IDENTIFIER • OPENBRACKET $@7 parameters CLOSEDBRACKET
   60                   | VOID IDENTIFIER • OPENBRACKET $@8 CLOSEDBRACKET

    OPENBRACKET  shift, and go to state 109


State 70

   22 value: STRING_VAL •

    $default  reduce using rule 22 (value)


State 71

   23 value: CHAR_VAL •

    $default  reduce using rule 23 (value)


State 72

   51 return_value: value •

    $default  reduce using rule 51 (return_value)


State 73

   19 statement: RETURN return_value • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 74

   21 value: expression •
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 21 (value)


State 75

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
   97 factor: OPENBRACKET expression • CLOSEDBRACKET

    LT             shift, and go to state 81
    GT             shift, and go to state 82
    GE             shift, and go to state 83
    LE             shift, and go to state 84
    EQ_EQ          shift, and go to state 85
    NE             shift, and go to state 86
    AND            shift, and go to state 87
    OR             shift, and go to state 88
    CLOSEDBRACKET  shift, and go to state 111


State 76

   18 statement: OPENCURL $@1 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 112
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 77

    0 $accept: statements $end •

    $default  accept


State 78

    1 statements: statements statement •

    $default  reduce using rule 1 (statements)


State 79

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON
   54 function_prototype: type IDENTIFIER • OPENBRACKET $@5 parameters CLOSEDBRACKET
   56                   | type IDENTIFIER • OPENBRACKET $@6 CLOSEDBRACKET

    EQUAL        shift, and go to state 113
    OPENBRACKET  shift, and go to state 114
    SEMICOLON    shift, and go to state 115


State 80

   50 function: function_prototype $@2 • OPENCURL $@3 statements $@4 CLOSEDCURL

    OPENCURL  shift, and go to state 116


State 81

   78 boolean_expression: expression LT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 117
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 82

   77 boolean_expression: expression GT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 118
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 83

   75 boolean_expression: expression GE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 119
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 84

   76 boolean_expression: expression LE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 120
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 85

   73 boolean_expression: expression EQ_EQ • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 121
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 86

   74 boolean_expression: expression NE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 122
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 87

   79 boolean_expression: expression AND • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 123
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 88

   80 boolean_expression: expression OR • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 124
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 89

    3 statement: expression SEMICOLON •

    $default  reduce using rule 3 (statement)


State 90

   88 binary_expression: binary_expression PLUS • term

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 126
    factor  go to state 42


State 91

   89 binary_expression: binary_expression MINUS • term

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 127
    factor  go to state 42


State 92

   92 term: term MULT • factor

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 128


State 93

   93 term: term DIV • factor

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 129


State 94

   36 assignment_statement: IDENTIFIER PLUS_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 130


State 95

   37 assignment_statement: IDENTIFIER MINUS_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 131


State 96

   38 assignment_statement: IDENTIFIER MULT_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 132


State 97

   39 assignment_statement: IDENTIFIER DIV_EQ expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 133


State 98

   66 function_call: IDENTIFIER • OPENBRACKET $@9 call_parameters CLOSEDBRACKET SEMICOLON
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 96 (factor)


State 99

   40 assignment_statement: IDENTIFIER EQUAL function_call •

    $default  reduce using rule 40 (assignment_statement)


State 100

   35 assignment_statement: IDENTIFIER EQUAL expression • SEMICOLON
   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 134


State 101

   66 function_call: IDENTIFIER OPENBRACKET $@9 • call_parameters CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 68 (call_parameters)

    value                  go to state 135
    call_parameters        go to state 136
    call_parameter         go to state 137
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 102

   44 constant_declaration: CONST type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL  shift, and go to state 138


State 103

   45 extern_declartion: EXTERN type IDENTIFIER • SEMICOLON
   46                  | EXTERN type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL      shift, and go to state 139
    SEMICOLON  shift, and go to state 140


State 104

  103 if_statement: IF $@10 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 141
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 105

  118 while_statement: WHILE $@20 $@21 • OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 $@24

    OPENBRACKET  shift, and go to state 142


State 106

  125 do_while_statement: DO $@25 $@26 • statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 143
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 107

  138 for_statement: FOR $@31 OPENBRACKET • for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    IDENTIFIER   shift, and go to state 144
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23
    SEMICOLON    shift, and go to state 145

    value                  go to state 146
    type                   go to state 147
    assignment_statement   go to state 148
    var_declaration        go to state 149
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_initialization     go to state 150


State 108

  155 switch_statement: SWITCH $@43 $@44 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    OPENBRACKET  shift, and go to state 151


State 109

   58 function_prototype: VOID IDENTIFIER OPENBRACKET • $@7 parameters CLOSEDBRACKET
   60                   | VOID IDENTIFIER OPENBRACKET • $@8 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 59 ($@8)
    $default       reduce using rule 57 ($@7)

    $@7  go to state 152
    $@8  go to state 153


State 110

   19 statement: RETURN return_value SEMICOLON •

    $default  reduce using rule 19 (statement)


State 111

   97 factor: OPENBRACKET expression CLOSEDBRACKET •

    $default  reduce using rule 97 (factor)


State 112

    1 statements: statements • statement
   18 statement: OPENCURL $@1 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 154
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 113

   41 var_declaration: type IDENTIFIER EQUAL • value SEMICOLON
   42                | type IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 155
    function_call          go to state 156
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 114

   54 function_prototype: type IDENTIFIER OPENBRACKET • $@5 parameters CLOSEDBRACKET
   56                   | type IDENTIFIER OPENBRACKET • $@6 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 55 ($@6)
    $default       reduce using rule 53 ($@5)

    $@5  go to state 157
    $@6  go to state 158


State 115

   43 var_declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 43 (var_declaration)


State 116

   50 function: function_prototype $@2 OPENCURL • $@3 statements $@4 CLOSEDCURL

    $default  reduce using rule 48 ($@3)

    $@3  go to state 159


State 117

   78 boolean_expression: expression LT arithmetic_expression •

    $default  reduce using rule 78 (boolean_expression)


State 118

   77 boolean_expression: expression GT arithmetic_expression •

    $default  reduce using rule 77 (boolean_expression)


State 119

   75 boolean_expression: expression GE arithmetic_expression •

    $default  reduce using rule 75 (boolean_expression)


State 120

   76 boolean_expression: expression LE arithmetic_expression •

    $default  reduce using rule 76 (boolean_expression)


State 121

   73 boolean_expression: expression EQ_EQ arithmetic_expression •

    $default  reduce using rule 73 (boolean_expression)


State 122

   74 boolean_expression: expression NE arithmetic_expression •

    $default  reduce using rule 74 (boolean_expression)


State 123

   79 boolean_expression: expression AND arithmetic_expression •

    $default  reduce using rule 79 (boolean_expression)


State 124

   80 boolean_expression: expression OR arithmetic_expression •

    $default  reduce using rule 80 (boolean_expression)


State 125

   96 factor: IDENTIFIER •

    $default  reduce using rule 96 (factor)


State 126

   88 binary_expression: binary_expression PLUS term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 88 (binary_expression)


State 127

   89 binary_expression: binary_expression MINUS term •
   92 term: term • MULT factor
   93     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 89 (binary_expression)


State 128

   92 term: term MULT factor •

    $default  reduce using rule 92 (term)


State 129

   93 term: term DIV factor •

    $default  reduce using rule 93 (term)


State 130

   36 assignment_statement: IDENTIFIER PLUS_EQ expression SEMICOLON •

    $default  reduce using rule 36 (assignment_statement)


State 131

   37 assignment_statement: IDENTIFIER MINUS_EQ expression SEMICOLON •

    $default  reduce using rule 37 (assignment_statement)


State 132

   38 assignment_statement: IDENTIFIER MULT_EQ expression SEMICOLON •

    $default  reduce using rule 38 (assignment_statement)


State 133

   39 assignment_statement: IDENTIFIER DIV_EQ expression SEMICOLON •

    $default  reduce using rule 39 (assignment_statement)


State 134

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON •

    $default  reduce using rule 35 (assignment_statement)


State 135

   70 call_parameter: value •

    $default  reduce using rule 70 (call_parameter)


State 136

   66 function_call: IDENTIFIER OPENBRACKET $@9 call_parameters • CLOSEDBRACKET SEMICOLON

    CLOSEDBRACKET  shift, and go to state 160


State 137

   67 call_parameters: call_parameter •
   69 call_parameter: call_parameter • COMMA value

    COMMA  shift, and go to state 161

    $default  reduce using rule 67 (call_parameters)


State 138

   44 constant_declaration: CONST type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 162
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 139

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 163
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 140

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON •

    $default  reduce using rule 45 (extern_declartion)


State 141

  103 if_statement: IF $@10 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    CLOSEDBRACKET  shift, and go to state 164


State 142

  118 while_statement: WHILE $@20 $@21 OPENBRACKET • value CLOSEDBRACKET $@22 statement $@23 $@24

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 165
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 143

  125 do_while_statement: DO $@25 $@26 statement • $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    $default  reduce using rule 121 ($@27)

    $@27  go to state 166


State 144

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •

    PLUS_EQ   shift, and go to state 50
    MINUS_EQ  shift, and go to state 51
    MULT_EQ   shift, and go to state 52
    DIV_EQ    shift, and go to state 53
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 56

    $default  reduce using rule 96 (factor)


State 145

  142 for_initialization: SEMICOLON •

    $default  reduce using rule 142 (for_initialization)


State 146

  141 for_initialization: value • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 147

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 168


State 148

  139 for_initialization: assignment_statement •

    $default  reduce using rule 139 (for_initialization)


State 149

  140 for_initialization: var_declaration •

    $default  reduce using rule 140 (for_initialization)


State 150

  138 for_statement: FOR $@31 OPENBRACKET for_initialization • $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 127 ($@32)

    $@32  go to state 169


State 151

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 170
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 152

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    parameters        go to state 172
    single_parameter  go to state 173


State 153

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@8 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 174


State 154

   18 statement: OPENCURL $@1 statements CLOSEDCURL •

    $default  reduce using rule 18 (statement)


State 155

   41 var_declaration: type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 156

   42 var_declaration: type IDENTIFIER EQUAL function_call •

    $default  reduce using rule 42 (var_declaration)


State 157

   54 function_prototype: type IDENTIFIER OPENBRACKET $@5 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    parameters        go to state 176
    single_parameter  go to state 173


State 158

   56 function_prototype: type IDENTIFIER OPENBRACKET $@6 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 177


State 159

   50 function: function_prototype $@2 OPENCURL $@3 • statements $@4 CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 178
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 160

   66 function_call: IDENTIFIER OPENBRACKET $@9 call_parameters CLOSEDBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 179


State 161

   69 call_parameter: call_parameter COMMA • value

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 180
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 162

   44 constant_declaration: CONST type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 163

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 182


State 164

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    OPENCURL  shift, and go to state 183


State 165

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value • CLOSEDBRACKET $@22 statement $@23 $@24

    CLOSEDBRACKET  shift, and go to state 184


State 166

  125 do_while_statement: DO $@25 $@26 statement $@27 • WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    WHILE  shift, and go to state 185


State 167

  141 for_initialization: value SEMICOLON •

    $default  reduce using rule 141 (for_initialization)


State 168

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON

    EQUAL      shift, and go to state 113
    SEMICOLON  shift, and go to state 115


State 169

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 • value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 186
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 170

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    CLOSEDBRACKET  shift, and go to state 187


State 171

   63 single_parameter: type • IDENTIFIER
   64                 | type • IDENTIFIER EQUAL constant

    IDENTIFIER  shift, and go to state 188


State 172

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 parameters • CLOSEDBRACKET
   61 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 190


State 173

   62 parameters: single_parameter •

    $default  reduce using rule 62 (parameters)


State 174

   60 function_prototype: VOID IDENTIFIER OPENBRACKET $@8 CLOSEDBRACKET •

    $default  reduce using rule 60 (function_prototype)


State 175

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 41 (var_declaration)


State 176

   54 function_prototype: type IDENTIFIER OPENBRACKET $@5 parameters • CLOSEDBRACKET
   61 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 191


State 177

   56 function_prototype: type IDENTIFIER OPENBRACKET $@6 CLOSEDBRACKET •

    $default  reduce using rule 56 (function_prototype)


State 178

    1 statements: statements • statement
   50 function: function_prototype $@2 OPENCURL $@3 statements • $@4 CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 49 ($@4)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    $@4                    go to state 192
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 179

   66 function_call: IDENTIFIER OPENBRACKET $@9 call_parameters CLOSEDBRACKET SEMICOLON •

    $default  reduce using rule 66 (function_call)


State 180

   69 call_parameter: call_parameter COMMA value •

    $default  reduce using rule 69 (call_parameter)


State 181

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 44 (constant_declaration)


State 182

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 46 (extern_declartion)


State 183

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    $default  reduce using rule 99 ($@11)

    $@11  go to state 193


State 184

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET • $@22 statement $@23 $@24

    $default  reduce using rule 115 ($@22)

    $@22  go to state 194


State 185

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE • OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    OPENBRACKET  shift, and go to state 195


State 186

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value • $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 128 ($@33)

    $@33  go to state 196


State 187

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@45 case_list CLOSEDCURL $@46 $@47

    OPENCURL  shift, and go to state 197


State 188

   63 single_parameter: type IDENTIFIER •
   64                 | type IDENTIFIER • EQUAL constant

    EQUAL  shift, and go to state 198

    $default  reduce using rule 63 (single_parameter)


State 189

   61 parameters: parameters COMMA • single_parameter

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    single_parameter  go to state 199


State 190

   58 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 parameters CLOSEDBRACKET •

    $default  reduce using rule 58 (function_prototype)


State 191

   54 function_prototype: type IDENTIFIER OPENBRACKET $@5 parameters CLOSEDBRACKET •

    $default  reduce using rule 54 (function_prototype)


State 192

   50 function: function_prototype $@2 OPENCURL $@3 statements $@4 • CLOSEDCURL

    CLOSEDCURL  shift, and go to state 200


State 193

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 • statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 201
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 194

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 • statement $@23 $@24

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 202
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 195

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET • value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 203
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 196

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 • $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 129 ($@34)

    $@34  go to state 204


State 197

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@45 case_list CLOSEDCURL $@46 $@47

    $default  reduce using rule 152 ($@45)

    $@45  go to state 205


State 198

   64 single_parameter: type IDENTIFIER EQUAL • constant

    INT_NUM     shift, and go to state 206
    FLOAT_VAL   shift, and go to state 207
    STRING_VAL  shift, and go to state 208
    TRUE_VAL    shift, and go to state 209
    FALSE_VAL   shift, and go to state 210
    CHAR_VAL    shift, and go to state 211

    constant  go to state 212


State 199

   61 parameters: parameters COMMA single_parameter •

    $default  reduce using rule 61 (parameters)


State 200

   50 function: function_prototype $@2 OPENCURL $@3 statements $@4 CLOSEDCURL •

    $default  reduce using rule 50 (function)


State 201

    1 statements: statements • statement
  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements • $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 100 ($@12)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    $@12                   go to state 213
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 202

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement • $@23 $@24

    $default  reduce using rule 116 ($@23)

    $@23  go to state 214


State 203

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value • $@28 $@29 CLOSEDBRACKET SEMICOLON $@30

    $default  reduce using rule 122 ($@28)

    $@28  go to state 215


State 204

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 • SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    SEMICOLON  shift, and go to state 216


State 205

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 • case_list CLOSEDCURL $@46 $@47

    CASE     shift, and go to state 217
    DEFAULT  shift, and go to state 218

    case_list       go to state 219
    case_statement  go to state 220


State 206

   29 constant: INT_NUM •

    $default  reduce using rule 29 (constant)


State 207

   30 constant: FLOAT_VAL •

    $default  reduce using rule 30 (constant)


State 208

   31 constant: STRING_VAL •

    $default  reduce using rule 31 (constant)


State 209

   32 constant: TRUE_VAL •

    $default  reduce using rule 32 (constant)


State 210

   33 constant: FALSE_VAL •

    $default  reduce using rule 33 (constant)


State 211

   34 constant: CHAR_VAL •

    $default  reduce using rule 34 (constant)


State 212

   64 single_parameter: type IDENTIFIER EQUAL constant •

    $default  reduce using rule 64 (single_parameter)


State 213

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 • CLOSEDCURL $@13 else_if_statement elsestatement $@14

    CLOSEDCURL  shift, and go to state 221


State 214

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 • $@24

    $default  reduce using rule 117 ($@24)

    $@24  go to state 222


State 215

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 • $@29 CLOSEDBRACKET SEMICOLON $@30

    $default  reduce using rule 123 ($@29)

    $@29  go to state 223


State 216

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON • $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 130 ($@35)

    $@35  go to state 224


State 217

  161 case_statement: CASE • $@48 value $@49 COLON $@50 statements

    $default  reduce using rule 158 ($@48)

    $@48  go to state 225


State 218

  163 case_statement: DEFAULT • COLON $@51 statements

    COLON  shift, and go to state 226


State 219

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list • CLOSEDCURL $@46 $@47
  156 case_list: case_list • case_statement

    CASE        shift, and go to state 217
    DEFAULT     shift, and go to state 218
    CLOSEDCURL  shift, and go to state 227

    case_statement  go to state 228


State 220

  157 case_list: case_statement •

    $default  reduce using rule 157 (case_list)


State 221

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL • $@13 else_if_statement elsestatement $@14

    $default  reduce using rule 101 ($@13)

    $@13  go to state 229


State 222

  118 while_statement: WHILE $@20 $@21 OPENBRACKET value CLOSEDBRACKET $@22 statement $@23 $@24 •

    $default  reduce using rule 118 (while_statement)


State 223

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 • CLOSEDBRACKET SEMICOLON $@30

    CLOSEDBRACKET  shift, and go to state 230


State 224

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 • $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 131 ($@36)

    $@36  go to state 231


State 225

  161 case_statement: CASE $@48 • value $@49 COLON $@50 statements

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 232
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 226

  163 case_statement: DEFAULT COLON • $@51 statements

    $default  reduce using rule 162 ($@51)

    $@51  go to state 233


State 227

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL • $@46 $@47

    $default  reduce using rule 153 ($@46)

    $@46  go to state 234


State 228

  156 case_list: case_list case_statement •

    $default  reduce using rule 156 (case_list)


State 229

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 • else_if_statement elsestatement $@14

    $default  reduce using rule 112 (else_if_statement)

    else_if_statement  go to state 235


State 230

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET • SEMICOLON $@30

    SEMICOLON  shift, and go to state 236


State 231

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 • for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    IDENTIFIER   shift, and go to state 237
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 149 (for_expression)

    value                  go to state 238
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_expression         go to state 239


State 232

  161 case_statement: CASE $@48 value • $@49 COLON $@50 statements

    $default  reduce using rule 159 ($@49)

    $@49  go to state 240


State 233

  163 case_statement: DEFAULT COLON $@51 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 241
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 234

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 • $@47

    $default  reduce using rule 154 ($@47)

    $@47  go to state 242


State 235

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement • elsestatement $@14
  111 else_if_statement: else_if_statement • ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    ELSEIF  shift, and go to state 243
    ELSE    shift, and go to state 244

    $default  reduce using rule 106 (elsestatement)

    elsestatement  go to state 245


State 236

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON • $@30

    $default  reduce using rule 124 ($@30)

    $@30  go to state 246


State 237

   86 unary_expression: IDENTIFIER • INC
   87                 | IDENTIFIER • DEC
   96 factor: IDENTIFIER •
  143 for_expression: IDENTIFIER • EQUAL value SEMICOLON
  144               | IDENTIFIER • PLUS_EQ expression
  145               | IDENTIFIER • MINUS_EQ expression
  146               | IDENTIFIER • MULT_EQ expression
  147               | IDENTIFIER • DIV_EQ expression

    PLUS_EQ   shift, and go to state 247
    MINUS_EQ  shift, and go to state 248
    MULT_EQ   shift, and go to state 249
    DIV_EQ    shift, and go to state 250
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 251

    $default  reduce using rule 96 (factor)


State 238

  148 for_expression: value •

    $default  reduce using rule 148 (for_expression)


State 239

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression • CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42

    CLOSEDBRACKET  shift, and go to state 252


State 240

  161 case_statement: CASE $@48 value $@49 • COLON $@50 statements

    COLON  shift, and go to state 253


State 241

    1 statements: statements • statement
  163 case_statement: DEFAULT COLON $@51 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 163 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 242

  155 switch_statement: SWITCH $@43 $@44 OPENBRACKET value CLOSEDBRACKET OPENCURL $@45 case_list CLOSEDCURL $@46 $@47 •

    $default  reduce using rule 155 (switch_statement)


State 243

  111 else_if_statement: else_if_statement ELSEIF • $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    $default  reduce using rule 107 ($@16)

    $@16  go to state 254


State 244

  105 elsestatement: ELSE • OPENCURL $@15 statements CLOSEDCURL

    OPENCURL  shift, and go to state 255


State 245

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement • $@14

    $default  reduce using rule 102 ($@14)

    $@14  go to state 256


State 246

  125 do_while_statement: DO $@25 $@26 statement $@27 WHILE OPENBRACKET value $@28 $@29 CLOSEDBRACKET SEMICOLON $@30 •

    $default  reduce using rule 125 (do_while_statement)


State 247

  144 for_expression: IDENTIFIER PLUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 257
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 248

  145 for_expression: IDENTIFIER MINUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 258
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 249

  146 for_expression: IDENTIFIER MULT_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 259
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 250

  147 for_expression: IDENTIFIER DIV_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 260
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 251

  143 for_expression: IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 261
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 252

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET • $@37 $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 132 ($@37)

    $@37  go to state 262


State 253

  161 case_statement: CASE $@48 value $@49 COLON • $@50 statements

    $default  reduce using rule 160 ($@50)

    $@50  go to state 263


State 254

  111 else_if_statement: else_if_statement ELSEIF $@16 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    OPENBRACKET  shift, and go to state 264


State 255

  105 elsestatement: ELSE OPENCURL • $@15 statements CLOSEDCURL

    $default  reduce using rule 104 ($@15)

    $@15  go to state 265


State 256

  103 if_statement: IF $@10 OPENBRACKET value CLOSEDBRACKET OPENCURL $@11 statements $@12 CLOSEDCURL $@13 else_if_statement elsestatement $@14 •

    $default  reduce using rule 103 (if_statement)


State 257

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  144 for_expression: IDENTIFIER PLUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 144 (for_expression)


State 258

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  145 for_expression: IDENTIFIER MINUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 145 (for_expression)


State 259

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  146 for_expression: IDENTIFIER MULT_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 146 (for_expression)


State 260

   73 boolean_expression: expression • EQ_EQ arithmetic_expression
   74                   | expression • NE arithmetic_expression
   75                   | expression • GE arithmetic_expression
   76                   | expression • LE arithmetic_expression
   77                   | expression • GT arithmetic_expression
   78                   | expression • LT arithmetic_expression
   79                   | expression • AND arithmetic_expression
   80                   | expression • OR arithmetic_expression
  147 for_expression: IDENTIFIER DIV_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 147 (for_expression)


State 261

  143 for_expression: IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 266


State 262

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 • $@38 statement $@39 $@40 $@41 $@42

    $default  reduce using rule 133 ($@38)

    $@38  go to state 267


State 263

  161 case_statement: CASE $@48 value $@49 COLON $@50 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 268
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 264

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 269
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 265

  105 elsestatement: ELSE OPENCURL $@15 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 270
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 266

  143 for_expression: IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 143 (for_expression)


State 267

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 • statement $@39 $@40 $@41 $@42

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 271
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 268

    1 statements: statements • statement
  161 case_statement: CASE $@48 value $@49 COLON $@50 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 161 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 269

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    CLOSEDBRACKET  shift, and go to state 272


State 270

    1 statements: statements • statement
  105 elsestatement: ELSE OPENCURL $@15 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 273
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 271

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement • $@39 $@40 $@41 $@42

    $default  reduce using rule 134 ($@39)

    $@39  go to state 274


State 272

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@17 statements $@18 CLOSEDCURL $@19

    OPENCURL  shift, and go to state 275


State 273

  105 elsestatement: ELSE OPENCURL $@15 statements CLOSEDCURL •

    $default  reduce using rule 105 (elsestatement)


State 274

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 • $@40 $@41 $@42

    $default  reduce using rule 135 ($@40)

    $@40  go to state 276


State 275

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@17 statements $@18 CLOSEDCURL $@19

    $default  reduce using rule 108 ($@17)

    $@17  go to state 277


State 276

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 • $@41 $@42

    $default  reduce using rule 136 ($@41)

    $@41  go to state 278


State 277

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 • statements $@18 CLOSEDCURL $@19

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 279
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 278

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 • $@42

    $default  reduce using rule 137 ($@42)

    $@42  go to state 280


State 279

    1 statements: statements • statement
  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements • $@18 CLOSEDCURL $@19

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 109 ($@18)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    $@18                   go to state 281
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 280

  138 for_statement: FOR $@31 OPENBRACKET for_initialization $@32 value $@33 $@34 SEMICOLON $@35 $@36 for_expression CLOSEDBRACKET $@37 $@38 statement $@39 $@40 $@41 $@42 •

    $default  reduce using rule 138 (for_statement)


State 281

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 • CLOSEDCURL $@19

    CLOSEDCURL  shift, and go to state 282


State 282

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL • $@19

    $default  reduce using rule 110 ($@19)

    $@19  go to state 283


State 283

  111 else_if_statement: else_if_statement ELSEIF $@16 OPENBRACKET value CLOSEDBRACKET OPENCURL $@17 statements $@18 CLOSEDCURL $@19 •

    $default  reduce using rule 111 (else_if_statement)
