State 254 conflicts: 25 shift/reduce


Grammar

    0 $accept: statements $end

    1 statements: statements statement
    2           | statement

    3 statement: expression SEMICOLON
    4          | assignment_statement
    5          | var_declaration
    6          | constant_declaration
    7          | extern_declartion
    8          | if_statement
    9          | while_statement
   10          | do_while_statement
   11          | for_statement
   12          | switch_statement
   13          | break_statement
   14          | continue_statement
   15          | function
   16          | function_call

   17 $@1: ε

   18 statement: OPENCURL $@1 statements CLOSEDCURL
   19          | RETURN return_value SEMICOLON
   20          | SEMICOLON

   21 value: expression
   22      | STRING_VAL
   23      | CHAR_VAL

   24 type: INT
   25     | FLOAT
   26     | CHAR
   27     | STRING
   28     | BOOL

   29 constant: INT_NUM
   30         | FLOAT_VAL
   31         | STRING_VAL
   32         | TRUE_VAL
   33         | FALSE_VAL
   34         | CHAR_VAL

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON
   36                     | IDENTIFIER PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER EQUAL function_call

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON
   42                | type IDENTIFIER EQUAL function_call
   43                | type IDENTIFIER SEMICOLON

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON
   46                  | EXTERN type IDENTIFIER EQUAL value SEMICOLON

   47 $@2: ε

   48 $@3: ε

   49 function: function_prototype OPENCURL $@2 statements CLOSEDCURL $@3

   50 return_value: value
   51             | ε

   52 $@4: ε

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET

   54 $@5: ε

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

   56 $@6: ε

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET

   58 $@7: ε

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

   60 parameters: parameters COMMA single_parameter
   61           | single_parameter

   62 single_parameter: type IDENTIFIER
   63                 | type IDENTIFIER EQUAL constant

   64 $@8: ε

   65 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON

   66 call_parameters: call_parameter
   67                | ε

   68 call_parameter: call_parameter COMMA value
   69               | value

   70 expression: boolean_expression
   71           | arithmetic_expression

   72 boolean_expression: expression EQ_EQ arithmetic_expression
   73                   | expression NE arithmetic_expression
   74                   | expression GE arithmetic_expression
   75                   | expression LE arithmetic_expression
   76                   | expression GT arithmetic_expression
   77                   | expression LT arithmetic_expression
   78                   | expression AND arithmetic_expression
   79                   | expression OR arithmetic_expression
   80                   | NOT expression
   81                   | TRUE_VAL
   82                   | FALSE_VAL

   83 arithmetic_expression: binary_expression
   84                      | unary_expression

   85 unary_expression: IDENTIFIER INC
   86                 | IDENTIFIER DEC

   87 binary_expression: binary_expression PLUS term
   88                  | binary_expression MINUS term
   89                  | term

   90 term: factor
   91     | term MULT factor
   92     | term DIV factor

   93 factor: INT_NUM
   94       | FLOAT_VAL
   95       | IDENTIFIER
   96       | OPENBRACKET expression CLOSEDBRACKET

   97 $@9: ε

   98 $@10: ε

   99 $@11: ε

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

  101 $@12: ε

  102 $@13: ε

  103 $@14: ε

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14

  105 $@15: ε

  106 $@16: ε

  107 else_if_statement: ELSE $@15 OPENCURL $@16 statements CLOSEDCURL
  108                  | ε

  109 $@17: ε

  110 $@18: ε

  111 $@19: ε

  112 $@20: ε

  113 $@21: ε

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 $@21

  115 $@22: ε

  116 $@23: ε

  117 $@24: ε

  118 $@25: ε

  119 $@26: ε

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

  121 $@27: ε

  122 $@28: ε

  123 $@29: ε

  124 $@30: ε

  125 $@31: ε

  126 $@32: ε

  127 $@33: ε

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

  129 for_initialization: assignment_statement
  130                   | var_declaration
  131                   | value SEMICOLON
  132                   | SEMICOLON

  133 for_expression: IDENTIFIER EQUAL value SEMICOLON
  134               | IDENTIFIER PLUS_EQ expression
  135               | IDENTIFIER MINUS_EQ expression
  136               | IDENTIFIER MULT_EQ expression
  137               | IDENTIFIER DIV_EQ expression
  138               | value
  139               | ε

  140 $@34: ε

  141 $@35: ε

  142 $@36: ε

  143 $@37: ε

  144 $@38: ε

  145 $@39: ε

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

  147 case_list: case_list case_statement
  148          | case_statement

  149 $@40: ε

  150 case_statement: CASE value COLON $@40 statements

  151 $@41: ε

  152 case_statement: DEFAULT COLON $@41 statements

  153 break_statement: BREAK SEMICOLON

  154 continue_statement: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <name> (258) 35 36 37 38 39 40 41 42 43 44 45 46 53 55 57 59 62 63 65 85 86 95 133 134 135 136 137
    INT_NUM <lexicalstruct> (259) 29 93
    FLOAT_VAL <lexicalstruct> (260) 30 94
    STRING_VAL <lexicalstruct> (261) 22 31
    TRUE_VAL <lexicalstruct> (262) 32 81
    FALSE_VAL <lexicalstruct> (263) 33 82
    CHAR_VAL <lexicalstruct> (264) 23 34
    INT <var_type> (265) 24
    FLOAT <var_type> (266) 25
    CHAR <var_type> (267) 26
    BOOL <var_type> (268) 28
    STRING <var_type> (269) 27
    CONST (270) 44
    EXTERN (271) 45 46
    PLUS (272) 87
    MINUS (273) 88
    MULT (274) 91
    DIV (275) 92
    PLUS_EQ (276) 36 134
    MINUS_EQ (277) 37 135
    MULT_EQ (278) 38 136
    DIV_EQ (279) 39 137
    INC (280) 85
    DEC (281) 86
    LT (282) 77
    GT (283) 76
    GE (284) 74
    LE (285) 75
    EQ_EQ (286) 72
    NE (287) 73
    AND (288) 78
    OR (289) 79
    NOT (290) 80
    EQUAL (291) 35 40 41 42 44 46 63 133
    IF (292) 100
    ELSEIF (293) 104
    ELSE (294) 107
    WHILE (295) 114 120
    DO (296) 120
    FOR (297) 128
    SWITCH (298) 146
    CASE (299) 150
    DEFAULT (300) 152
    BREAK (301) 153
    CONTINUE (302) 154
    VOID (303) 57 59
    RETURN (304) 19
    COMMA (305) 60 68
    COLON (306) 150 152
    OPENBRACKET (307) 53 55 57 59 65 96 100 104 114 120 128 146
    CLOSEDBRACKET (308) 53 55 57 59 65 96 100 104 114 120 128 146
    OPENCURL (309) 18 49 100 104 107 146
    CLOSEDCURL (310) 18 49 100 104 107 146
    SEMICOLON (311) 3 19 20 35 36 37 38 39 41 43 44 45 46 65 120 128 131 132 133 153 154


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    statements (58)
        on left: 1 2
        on right: 0 1 18 49 100 104 107 128 150 152
    statement (59)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20
        on right: 1 2 114 120
    $@1 (60)
        on left: 17
        on right: 18
    value <lexicalstruct> (61)
        on left: 21 22 23
        on right: 41 44 46 50 68 69 100 104 114 120 128 131 133 138 146 150
    type <var_type> (62)
        on left: 24 25 26 27 28
        on right: 41 42 43 44 45 46 53 55 62 63
    constant <lexicalstruct> (63)
        on left: 29 30 31 32 33 34
        on right: 63
    assignment_statement (64)
        on left: 35 36 37 38 39 40
        on right: 4 129
    var_declaration (65)
        on left: 41 42 43
        on right: 5 130
    constant_declaration (66)
        on left: 44
        on right: 6
    extern_declartion (67)
        on left: 45 46
        on right: 7
    function (68)
        on left: 49
        on right: 15
    $@2 (69)
        on left: 47
        on right: 49
    $@3 (70)
        on left: 48
        on right: 49
    return_value <lexicalstruct> (71)
        on left: 50 51
        on right: 19
    function_prototype (72)
        on left: 53 55 57 59
        on right: 49
    $@4 (73)
        on left: 52
        on right: 53
    $@5 (74)
        on left: 54
        on right: 55
    $@6 (75)
        on left: 56
        on right: 57
    $@7 (76)
        on left: 58
        on right: 59
    parameters (77)
        on left: 60 61
        on right: 53 57 60
    single_parameter (78)
        on left: 62 63
        on right: 60 61
    function_call <lexicalstruct> (79)
        on left: 65
        on right: 16 40 42
    $@8 (80)
        on left: 64
        on right: 65
    call_parameters (81)
        on left: 66 67
        on right: 65
    call_parameter (82)
        on left: 68 69
        on right: 66 68
    expression <lexicalstruct> (83)
        on left: 70 71
        on right: 3 21 35 36 37 38 39 72 73 74 75 76 77 78 79 80 96 134 135 136 137
    boolean_expression <lexicalstruct> (84)
        on left: 72 73 74 75 76 77 78 79 80 81 82
        on right: 70
    arithmetic_expression <lexicalstruct> (85)
        on left: 83 84
        on right: 71 72 73 74 75 76 77 78 79
    unary_expression <lexicalstruct> (86)
        on left: 85 86
        on right: 84
    binary_expression <lexicalstruct> (87)
        on left: 87 88 89
        on right: 83 87 88
    term <lexicalstruct> (88)
        on left: 90 91 92
        on right: 87 88 89 91 92
    factor <lexicalstruct> (89)
        on left: 93 94 95 96
        on right: 90 91 92
    if_statement (90)
        on left: 100
        on right: 8
    $@9 (91)
        on left: 97
        on right: 100
    $@10 (92)
        on left: 98
        on right: 100
    $@11 (93)
        on left: 99
        on right: 100
    else_if_statement (94)
        on left: 104 107 108
        on right: 100 104
    $@12 (95)
        on left: 101
        on right: 104
    $@13 (96)
        on left: 102
        on right: 104
    $@14 (97)
        on left: 103
        on right: 104
    $@15 (98)
        on left: 105
        on right: 107
    $@16 (99)
        on left: 106
        on right: 107
    while_statement (100)
        on left: 114
        on right: 9
    $@17 (101)
        on left: 109
        on right: 114
    $@18 (102)
        on left: 110
        on right: 114
    $@19 (103)
        on left: 111
        on right: 114
    $@20 (104)
        on left: 112
        on right: 114
    $@21 (105)
        on left: 113
        on right: 114
    do_while_statement (106)
        on left: 120
        on right: 10
    $@22 (107)
        on left: 115
        on right: 120
    $@23 (108)
        on left: 116
        on right: 120
    $@24 (109)
        on left: 117
        on right: 120
    $@25 (110)
        on left: 118
        on right: 120
    $@26 (111)
        on left: 119
        on right: 120
    for_statement (112)
        on left: 128
        on right: 11
    $@27 (113)
        on left: 121
        on right: 128
    $@28 (114)
        on left: 122
        on right: 128
    $@29 (115)
        on left: 123
        on right: 128
    $@30 (116)
        on left: 124
        on right: 128
    $@31 (117)
        on left: 125
        on right: 128
    $@32 (118)
        on left: 126
        on right: 128
    $@33 (119)
        on left: 127
        on right: 128
    for_initialization (120)
        on left: 129 130 131 132
        on right: 128
    for_expression (121)
        on left: 133 134 135 136 137 138 139
        on right: 128
    switch_statement (122)
        on left: 146
        on right: 12
    $@34 (123)
        on left: 140
        on right: 146
    $@35 (124)
        on left: 141
        on right: 146
    $@36 (125)
        on left: 142
        on right: 146
    $@37 (126)
        on left: 143
        on right: 146
    $@38 (127)
        on left: 144
        on right: 146
    $@39 (128)
        on left: 145
        on right: 146
    case_list (129)
        on left: 147 148
        on right: 146 147
    case_statement (130)
        on left: 150 152
        on right: 147 148
    $@40 (131)
        on left: 149
        on right: 150
    $@41 (132)
        on left: 151
        on right: 152
    break_statement (133)
        on left: 153
        on right: 13
    continue_statement (134)
        on left: 154
        on right: 14


State 0

    0 $accept: • statements $end

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 26
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 1

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   65 function_call: IDENTIFIER • OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON
   85 unary_expression: IDENTIFIER • INC
   86                 | IDENTIFIER • DEC
   95 factor: IDENTIFIER •

    PLUS_EQ      shift, and go to state 50
    MINUS_EQ     shift, and go to state 51
    MULT_EQ      shift, and go to state 52
    DIV_EQ       shift, and go to state 53
    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    EQUAL        shift, and go to state 56
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 95 (factor)


State 2

   93 factor: INT_NUM •

    $default  reduce using rule 93 (factor)


State 3

   94 factor: FLOAT_VAL •

    $default  reduce using rule 94 (factor)


State 4

   81 boolean_expression: TRUE_VAL •

    $default  reduce using rule 81 (boolean_expression)


State 5

   82 boolean_expression: FALSE_VAL •

    $default  reduce using rule 82 (boolean_expression)


State 6

   24 type: INT •

    $default  reduce using rule 24 (type)


State 7

   25 type: FLOAT •

    $default  reduce using rule 25 (type)


State 8

   26 type: CHAR •

    $default  reduce using rule 26 (type)


State 9

   28 type: BOOL •

    $default  reduce using rule 28 (type)


State 10

   27 type: STRING •

    $default  reduce using rule 27 (type)


State 11

   44 constant_declaration: CONST • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 58


State 12

   45 extern_declartion: EXTERN • type IDENTIFIER SEMICOLON
   46                  | EXTERN • type IDENTIFIER EQUAL value SEMICOLON

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type  go to state 59


State 13

   80 boolean_expression: NOT • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 61
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 14

  100 if_statement: IF • $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

    $default  reduce using rule 97 ($@9)

    $@9  go to state 62


State 15

  114 while_statement: WHILE • $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 $@21

    $default  reduce using rule 109 ($@17)

    $@17  go to state 63


State 16

  120 do_while_statement: DO • $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    $default  reduce using rule 115 ($@22)

    $@22  go to state 64


State 17

  128 for_statement: FOR • $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    $default  reduce using rule 121 ($@27)

    $@27  go to state 65


State 18

  146 switch_statement: SWITCH • $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    $default  reduce using rule 140 ($@34)

    $@34  go to state 66


State 19

  153 break_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 20

  154 continue_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 68


State 21

   57 function_prototype: VOID • IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET
   59                   | VOID • IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 69


State 22

   19 statement: RETURN • return_value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 51 (return_value)

    value                  go to state 72
    return_value           go to state 73
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 23

   96 factor: OPENBRACKET • expression CLOSEDBRACKET

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 75
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 24

   18 statement: OPENCURL • $@1 statements CLOSEDCURL

    $default  reduce using rule 17 ($@1)

    $@1  go to state 76


State 25

   20 statement: SEMICOLON •

    $default  reduce using rule 20 (statement)


State 26

    0 $accept: statements • $end
    1 statements: statements • statement

    $end         shift, and go to state 77
    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 27

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 28

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON
   53 function_prototype: type • IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET
   55                   | type • IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET

    IDENTIFIER  shift, and go to state 79


State 29

    4 statement: assignment_statement •

    $default  reduce using rule 4 (statement)


State 30

    5 statement: var_declaration •

    $default  reduce using rule 5 (statement)


State 31

    6 statement: constant_declaration •

    $default  reduce using rule 6 (statement)


State 32

    7 statement: extern_declartion •

    $default  reduce using rule 7 (statement)


State 33

   15 statement: function •

    $default  reduce using rule 15 (statement)


State 34

   49 function: function_prototype • OPENCURL $@2 statements CLOSEDCURL $@3

    OPENCURL  shift, and go to state 80


State 35

   16 statement: function_call •

    $default  reduce using rule 16 (statement)


State 36

    3 statement: expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 89


State 37

   70 expression: boolean_expression •

    $default  reduce using rule 70 (expression)


State 38

   71 expression: arithmetic_expression •

    $default  reduce using rule 71 (expression)


State 39

   84 arithmetic_expression: unary_expression •

    $default  reduce using rule 84 (arithmetic_expression)


State 40

   83 arithmetic_expression: binary_expression •
   87 binary_expression: binary_expression • PLUS term
   88                  | binary_expression • MINUS term

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    $default  reduce using rule 83 (arithmetic_expression)


State 41

   89 binary_expression: term •
   91 term: term • MULT factor
   92     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 89 (binary_expression)


State 42

   90 term: factor •

    $default  reduce using rule 90 (term)


State 43

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 44

    9 statement: while_statement •

    $default  reduce using rule 9 (statement)


State 45

   10 statement: do_while_statement •

    $default  reduce using rule 10 (statement)


State 46

   11 statement: for_statement •

    $default  reduce using rule 11 (statement)


State 47

   12 statement: switch_statement •

    $default  reduce using rule 12 (statement)


State 48

   13 statement: break_statement •

    $default  reduce using rule 13 (statement)


State 49

   14 statement: continue_statement •

    $default  reduce using rule 14 (statement)


State 50

   36 assignment_statement: IDENTIFIER PLUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 94
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 51

   37 assignment_statement: IDENTIFIER MINUS_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 95
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 52

   38 assignment_statement: IDENTIFIER MULT_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 96
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 53

   39 assignment_statement: IDENTIFIER DIV_EQ • expression SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 97
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 54

   85 unary_expression: IDENTIFIER INC •

    $default  reduce using rule 85 (unary_expression)


State 55

   86 unary_expression: IDENTIFIER DEC •

    $default  reduce using rule 86 (unary_expression)


State 56

   35 assignment_statement: IDENTIFIER EQUAL • expression SEMICOLON
   40                     | IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    function_call          go to state 99
    expression             go to state 100
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 57

   65 function_call: IDENTIFIER OPENBRACKET • $@8 call_parameters CLOSEDBRACKET SEMICOLON

    $default  reduce using rule 64 ($@8)

    $@8  go to state 101


State 58

   44 constant_declaration: CONST type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 102


State 59

   45 extern_declartion: EXTERN type • IDENTIFIER SEMICOLON
   46                  | EXTERN type • IDENTIFIER EQUAL value SEMICOLON

    IDENTIFIER  shift, and go to state 103


State 60

   85 unary_expression: IDENTIFIER • INC
   86                 | IDENTIFIER • DEC
   95 factor: IDENTIFIER •

    INC  shift, and go to state 54
    DEC  shift, and go to state 55

    $default  reduce using rule 95 (factor)


State 61

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
   80                   | NOT expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86

    AND  error (nonassociative)
    OR   error (nonassociative)

    $default  reduce using rule 80 (boolean_expression)


State 62

  100 if_statement: IF $@9 • OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

    OPENBRACKET  shift, and go to state 104


State 63

  114 while_statement: WHILE $@17 • $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 $@21

    $default  reduce using rule 110 ($@18)

    $@18  go to state 105


State 64

  120 do_while_statement: DO $@22 • $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    $default  reduce using rule 116 ($@23)

    $@23  go to state 106


State 65

  128 for_statement: FOR $@27 • OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    OPENBRACKET  shift, and go to state 107


State 66

  146 switch_statement: SWITCH $@34 • $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    $default  reduce using rule 141 ($@35)

    $@35  go to state 108


State 67

  153 break_statement: BREAK SEMICOLON •

    $default  reduce using rule 153 (break_statement)


State 68

  154 continue_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 154 (continue_statement)


State 69

   57 function_prototype: VOID IDENTIFIER • OPENBRACKET $@6 parameters CLOSEDBRACKET
   59                   | VOID IDENTIFIER • OPENBRACKET $@7 CLOSEDBRACKET

    OPENBRACKET  shift, and go to state 109


State 70

   22 value: STRING_VAL •

    $default  reduce using rule 22 (value)


State 71

   23 value: CHAR_VAL •

    $default  reduce using rule 23 (value)


State 72

   50 return_value: value •

    $default  reduce using rule 50 (return_value)


State 73

   19 statement: RETURN return_value • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 74

   21 value: expression •
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 21 (value)


State 75

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
   96 factor: OPENBRACKET expression • CLOSEDBRACKET

    LT             shift, and go to state 81
    GT             shift, and go to state 82
    GE             shift, and go to state 83
    LE             shift, and go to state 84
    EQ_EQ          shift, and go to state 85
    NE             shift, and go to state 86
    AND            shift, and go to state 87
    OR             shift, and go to state 88
    CLOSEDBRACKET  shift, and go to state 111


State 76

   18 statement: OPENCURL $@1 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 112
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 77

    0 $accept: statements $end •

    $default  accept


State 78

    1 statements: statements statement •

    $default  reduce using rule 1 (statements)


State 79

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON
   53 function_prototype: type IDENTIFIER • OPENBRACKET $@4 parameters CLOSEDBRACKET
   55                   | type IDENTIFIER • OPENBRACKET $@5 CLOSEDBRACKET

    EQUAL        shift, and go to state 113
    OPENBRACKET  shift, and go to state 114
    SEMICOLON    shift, and go to state 115


State 80

   49 function: function_prototype OPENCURL • $@2 statements CLOSEDCURL $@3

    $default  reduce using rule 47 ($@2)

    $@2  go to state 116


State 81

   77 boolean_expression: expression LT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 117
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 82

   76 boolean_expression: expression GT • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 118
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 83

   74 boolean_expression: expression GE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 119
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 84

   75 boolean_expression: expression LE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 120
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 85

   72 boolean_expression: expression EQ_EQ • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 121
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 86

   73 boolean_expression: expression NE • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 122
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 87

   78 boolean_expression: expression AND • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 123
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 88

   79 boolean_expression: expression OR • arithmetic_expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    arithmetic_expression  go to state 124
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 89

    3 statement: expression SEMICOLON •

    $default  reduce using rule 3 (statement)


State 90

   87 binary_expression: binary_expression PLUS • term

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 126
    factor  go to state 42


State 91

   88 binary_expression: binary_expression MINUS • term

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    term    go to state 127
    factor  go to state 42


State 92

   91 term: term MULT • factor

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 128


State 93

   92 term: term DIV • factor

    IDENTIFIER   shift, and go to state 125
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    OPENBRACKET  shift, and go to state 23

    factor  go to state 129


State 94

   36 assignment_statement: IDENTIFIER PLUS_EQ expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 130


State 95

   37 assignment_statement: IDENTIFIER MINUS_EQ expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 131


State 96

   38 assignment_statement: IDENTIFIER MULT_EQ expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 132


State 97

   39 assignment_statement: IDENTIFIER DIV_EQ expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 133


State 98

   65 function_call: IDENTIFIER • OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON
   85 unary_expression: IDENTIFIER • INC
   86                 | IDENTIFIER • DEC
   95 factor: IDENTIFIER •

    INC          shift, and go to state 54
    DEC          shift, and go to state 55
    OPENBRACKET  shift, and go to state 57

    $default  reduce using rule 95 (factor)


State 99

   40 assignment_statement: IDENTIFIER EQUAL function_call •

    $default  reduce using rule 40 (assignment_statement)


State 100

   35 assignment_statement: IDENTIFIER EQUAL expression • SEMICOLON
   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression

    LT         shift, and go to state 81
    GT         shift, and go to state 82
    GE         shift, and go to state 83
    LE         shift, and go to state 84
    EQ_EQ      shift, and go to state 85
    NE         shift, and go to state 86
    AND        shift, and go to state 87
    OR         shift, and go to state 88
    SEMICOLON  shift, and go to state 134


State 101

   65 function_call: IDENTIFIER OPENBRACKET $@8 • call_parameters CLOSEDBRACKET SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 67 (call_parameters)

    value                  go to state 135
    call_parameters        go to state 136
    call_parameter         go to state 137
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 102

   44 constant_declaration: CONST type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL  shift, and go to state 138


State 103

   45 extern_declartion: EXTERN type IDENTIFIER • SEMICOLON
   46                  | EXTERN type IDENTIFIER • EQUAL value SEMICOLON

    EQUAL      shift, and go to state 139
    SEMICOLON  shift, and go to state 140


State 104

  100 if_statement: IF $@9 OPENBRACKET • value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 141
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 105

  114 while_statement: WHILE $@17 $@18 • OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 $@21

    OPENBRACKET  shift, and go to state 142


State 106

  120 do_while_statement: DO $@22 $@23 • statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 143
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 107

  128 for_statement: FOR $@27 OPENBRACKET • for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    IDENTIFIER   shift, and go to state 144
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23
    SEMICOLON    shift, and go to state 145

    value                  go to state 146
    type                   go to state 147
    assignment_statement   go to state 148
    var_declaration        go to state 149
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_initialization     go to state 150


State 108

  146 switch_statement: SWITCH $@34 $@35 • OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    OPENBRACKET  shift, and go to state 151


State 109

   57 function_prototype: VOID IDENTIFIER OPENBRACKET • $@6 parameters CLOSEDBRACKET
   59                   | VOID IDENTIFIER OPENBRACKET • $@7 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 58 ($@7)
    $default       reduce using rule 56 ($@6)

    $@6  go to state 152
    $@7  go to state 153


State 110

   19 statement: RETURN return_value SEMICOLON •

    $default  reduce using rule 19 (statement)


State 111

   96 factor: OPENBRACKET expression CLOSEDBRACKET •

    $default  reduce using rule 96 (factor)


State 112

    1 statements: statements • statement
   18 statement: OPENCURL $@1 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 154
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 113

   41 var_declaration: type IDENTIFIER EQUAL • value SEMICOLON
   42                | type IDENTIFIER EQUAL • function_call

    IDENTIFIER   shift, and go to state 98
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 155
    function_call          go to state 156
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 114

   53 function_prototype: type IDENTIFIER OPENBRACKET • $@4 parameters CLOSEDBRACKET
   55                   | type IDENTIFIER OPENBRACKET • $@5 CLOSEDBRACKET

    CLOSEDBRACKET  reduce using rule 54 ($@5)
    $default       reduce using rule 52 ($@4)

    $@4  go to state 157
    $@5  go to state 158


State 115

   43 var_declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 43 (var_declaration)


State 116

   49 function: function_prototype OPENCURL $@2 • statements CLOSEDCURL $@3

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 159
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 117

   77 boolean_expression: expression LT arithmetic_expression •

    $default  reduce using rule 77 (boolean_expression)


State 118

   76 boolean_expression: expression GT arithmetic_expression •

    $default  reduce using rule 76 (boolean_expression)


State 119

   74 boolean_expression: expression GE arithmetic_expression •

    $default  reduce using rule 74 (boolean_expression)


State 120

   75 boolean_expression: expression LE arithmetic_expression •

    $default  reduce using rule 75 (boolean_expression)


State 121

   72 boolean_expression: expression EQ_EQ arithmetic_expression •

    $default  reduce using rule 72 (boolean_expression)


State 122

   73 boolean_expression: expression NE arithmetic_expression •

    $default  reduce using rule 73 (boolean_expression)


State 123

   78 boolean_expression: expression AND arithmetic_expression •

    $default  reduce using rule 78 (boolean_expression)


State 124

   79 boolean_expression: expression OR arithmetic_expression •

    $default  reduce using rule 79 (boolean_expression)


State 125

   95 factor: IDENTIFIER •

    $default  reduce using rule 95 (factor)


State 126

   87 binary_expression: binary_expression PLUS term •
   91 term: term • MULT factor
   92     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 87 (binary_expression)


State 127

   88 binary_expression: binary_expression MINUS term •
   91 term: term • MULT factor
   92     | term • DIV factor

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 88 (binary_expression)


State 128

   91 term: term MULT factor •

    $default  reduce using rule 91 (term)


State 129

   92 term: term DIV factor •

    $default  reduce using rule 92 (term)


State 130

   36 assignment_statement: IDENTIFIER PLUS_EQ expression SEMICOLON •

    $default  reduce using rule 36 (assignment_statement)


State 131

   37 assignment_statement: IDENTIFIER MINUS_EQ expression SEMICOLON •

    $default  reduce using rule 37 (assignment_statement)


State 132

   38 assignment_statement: IDENTIFIER MULT_EQ expression SEMICOLON •

    $default  reduce using rule 38 (assignment_statement)


State 133

   39 assignment_statement: IDENTIFIER DIV_EQ expression SEMICOLON •

    $default  reduce using rule 39 (assignment_statement)


State 134

   35 assignment_statement: IDENTIFIER EQUAL expression SEMICOLON •

    $default  reduce using rule 35 (assignment_statement)


State 135

   69 call_parameter: value •

    $default  reduce using rule 69 (call_parameter)


State 136

   65 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters • CLOSEDBRACKET SEMICOLON

    CLOSEDBRACKET  shift, and go to state 160


State 137

   66 call_parameters: call_parameter •
   68 call_parameter: call_parameter • COMMA value

    COMMA  shift, and go to state 161

    $default  reduce using rule 66 (call_parameters)


State 138

   44 constant_declaration: CONST type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 162
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 139

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 163
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 140

   45 extern_declartion: EXTERN type IDENTIFIER SEMICOLON •

    $default  reduce using rule 45 (extern_declartion)


State 141

  100 if_statement: IF $@9 OPENBRACKET value • CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

    CLOSEDBRACKET  shift, and go to state 164


State 142

  114 while_statement: WHILE $@17 $@18 OPENBRACKET • value CLOSEDBRACKET $@19 statement $@20 $@21

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 165
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 143

  120 do_while_statement: DO $@22 $@23 statement • WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    WHILE  shift, and go to state 166


State 144

   35 assignment_statement: IDENTIFIER • EQUAL expression SEMICOLON
   36                     | IDENTIFIER • PLUS_EQ expression SEMICOLON
   37                     | IDENTIFIER • MINUS_EQ expression SEMICOLON
   38                     | IDENTIFIER • MULT_EQ expression SEMICOLON
   39                     | IDENTIFIER • DIV_EQ expression SEMICOLON
   40                     | IDENTIFIER • EQUAL function_call
   85 unary_expression: IDENTIFIER • INC
   86                 | IDENTIFIER • DEC
   95 factor: IDENTIFIER •

    PLUS_EQ   shift, and go to state 50
    MINUS_EQ  shift, and go to state 51
    MULT_EQ   shift, and go to state 52
    DIV_EQ    shift, and go to state 53
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 56

    $default  reduce using rule 95 (factor)


State 145

  132 for_initialization: SEMICOLON •

    $default  reduce using rule 132 (for_initialization)


State 146

  131 for_initialization: value • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 147

   41 var_declaration: type • IDENTIFIER EQUAL value SEMICOLON
   42                | type • IDENTIFIER EQUAL function_call
   43                | type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 168


State 148

  129 for_initialization: assignment_statement •

    $default  reduce using rule 129 (for_initialization)


State 149

  130 for_initialization: var_declaration •

    $default  reduce using rule 130 (for_initialization)


State 150

  128 for_statement: FOR $@27 OPENBRACKET for_initialization • $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    $default  reduce using rule 122 ($@28)

    $@28  go to state 169


State 151

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET • $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    $default  reduce using rule 142 ($@36)

    $@36  go to state 170


State 152

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    parameters        go to state 172
    single_parameter  go to state 173


State 153

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 174


State 154

   18 statement: OPENCURL $@1 statements CLOSEDCURL •

    $default  reduce using rule 18 (statement)


State 155

   41 var_declaration: type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 156

   42 var_declaration: type IDENTIFIER EQUAL function_call •

    $default  reduce using rule 42 (var_declaration)


State 157

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 • parameters CLOSEDBRACKET

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    parameters        go to state 176
    single_parameter  go to state 173


State 158

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 • CLOSEDBRACKET

    CLOSEDBRACKET  shift, and go to state 177


State 159

    1 statements: statements • statement
   49 function: function_prototype OPENCURL $@2 statements • CLOSEDCURL $@3

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 178
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 160

   65 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 179


State 161

   68 call_parameter: call_parameter COMMA • value

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 180
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 162

   44 constant_declaration: CONST type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 163

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 182


State 164

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET • OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement

    OPENCURL  shift, and go to state 183


State 165

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value • CLOSEDBRACKET $@19 statement $@20 $@21

    CLOSEDBRACKET  shift, and go to state 184


State 166

  120 do_while_statement: DO $@22 $@23 statement WHILE • OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    OPENBRACKET  shift, and go to state 185


State 167

  131 for_initialization: value SEMICOLON •

    $default  reduce using rule 131 (for_initialization)


State 168

   41 var_declaration: type IDENTIFIER • EQUAL value SEMICOLON
   42                | type IDENTIFIER • EQUAL function_call
   43                | type IDENTIFIER • SEMICOLON

    EQUAL      shift, and go to state 113
    SEMICOLON  shift, and go to state 115


State 169

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 • value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 186
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 170

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 • value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 187
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 171

   62 single_parameter: type • IDENTIFIER
   63                 | type • IDENTIFIER EQUAL constant

    IDENTIFIER  shift, and go to state 188


State 172

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters • CLOSEDBRACKET
   60 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 190


State 173

   61 parameters: single_parameter •

    $default  reduce using rule 61 (parameters)


State 174

   59 function_prototype: VOID IDENTIFIER OPENBRACKET $@7 CLOSEDBRACKET •

    $default  reduce using rule 59 (function_prototype)


State 175

   41 var_declaration: type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 41 (var_declaration)


State 176

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters • CLOSEDBRACKET
   60 parameters: parameters • COMMA single_parameter

    COMMA          shift, and go to state 189
    CLOSEDBRACKET  shift, and go to state 191


State 177

   55 function_prototype: type IDENTIFIER OPENBRACKET $@5 CLOSEDBRACKET •

    $default  reduce using rule 55 (function_prototype)


State 178

   49 function: function_prototype OPENCURL $@2 statements CLOSEDCURL • $@3

    $default  reduce using rule 48 ($@3)

    $@3  go to state 192


State 179

   65 function_call: IDENTIFIER OPENBRACKET $@8 call_parameters CLOSEDBRACKET SEMICOLON •

    $default  reduce using rule 65 (function_call)


State 180

   68 call_parameter: call_parameter COMMA value •

    $default  reduce using rule 68 (call_parameter)


State 181

   44 constant_declaration: CONST type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 44 (constant_declaration)


State 182

   46 extern_declartion: EXTERN type IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 46 (extern_declartion)


State 183

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL • $@10 statements CLOSEDCURL $@11 else_if_statement

    $default  reduce using rule 98 ($@10)

    $@10  go to state 193


State 184

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET • $@19 statement $@20 $@21

    $default  reduce using rule 111 ($@19)

    $@19  go to state 194


State 185

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET • value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 195
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 186

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value • $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    $default  reduce using rule 123 ($@29)

    $@29  go to state 196


State 187

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value • CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    CLOSEDBRACKET  shift, and go to state 197


State 188

   62 single_parameter: type IDENTIFIER •
   63                 | type IDENTIFIER • EQUAL constant

    EQUAL  shift, and go to state 198

    $default  reduce using rule 62 (single_parameter)


State 189

   60 parameters: parameters COMMA • single_parameter

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 10

    type              go to state 171
    single_parameter  go to state 199


State 190

   57 function_prototype: VOID IDENTIFIER OPENBRACKET $@6 parameters CLOSEDBRACKET •

    $default  reduce using rule 57 (function_prototype)


State 191

   53 function_prototype: type IDENTIFIER OPENBRACKET $@4 parameters CLOSEDBRACKET •

    $default  reduce using rule 53 (function_prototype)


State 192

   49 function: function_prototype OPENCURL $@2 statements CLOSEDCURL $@3 •

    $default  reduce using rule 49 (function)


State 193

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 • statements CLOSEDCURL $@11 else_if_statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 200
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 194

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 • statement $@20 $@21

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statement              go to state 201
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 195

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value • $@24 $@25 CLOSEDBRACKET SEMICOLON $@26

    $default  reduce using rule 117 ($@24)

    $@24  go to state 202


State 196

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 • $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    $default  reduce using rule 124 ($@30)

    $@30  go to state 203


State 197

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET • OPENCURL $@37 case_list CLOSEDCURL $@38 $@39

    OPENCURL  shift, and go to state 204


State 198

   63 single_parameter: type IDENTIFIER EQUAL • constant

    INT_NUM     shift, and go to state 205
    FLOAT_VAL   shift, and go to state 206
    STRING_VAL  shift, and go to state 207
    TRUE_VAL    shift, and go to state 208
    FALSE_VAL   shift, and go to state 209
    CHAR_VAL    shift, and go to state 210

    constant  go to state 211


State 199

   60 parameters: parameters COMMA single_parameter •

    $default  reduce using rule 60 (parameters)


State 200

    1 statements: statements • statement
  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements • CLOSEDCURL $@11 else_if_statement

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 212
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 201

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement • $@20 $@21

    $default  reduce using rule 112 ($@20)

    $@20  go to state 213


State 202

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 • $@25 CLOSEDBRACKET SEMICOLON $@26

    $default  reduce using rule 118 ($@25)

    $@25  go to state 214


State 203

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 • SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    SEMICOLON  shift, and go to state 215


State 204

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL • $@37 case_list CLOSEDCURL $@38 $@39

    $default  reduce using rule 143 ($@37)

    $@37  go to state 216


State 205

   29 constant: INT_NUM •

    $default  reduce using rule 29 (constant)


State 206

   30 constant: FLOAT_VAL •

    $default  reduce using rule 30 (constant)


State 207

   31 constant: STRING_VAL •

    $default  reduce using rule 31 (constant)


State 208

   32 constant: TRUE_VAL •

    $default  reduce using rule 32 (constant)


State 209

   33 constant: FALSE_VAL •

    $default  reduce using rule 33 (constant)


State 210

   34 constant: CHAR_VAL •

    $default  reduce using rule 34 (constant)


State 211

   63 single_parameter: type IDENTIFIER EQUAL constant •

    $default  reduce using rule 63 (single_parameter)


State 212

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL • $@11 else_if_statement

    $default  reduce using rule 99 ($@11)

    $@11  go to state 217


State 213

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 • $@21

    $default  reduce using rule 113 ($@21)

    $@21  go to state 218


State 214

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 • CLOSEDBRACKET SEMICOLON $@26

    CLOSEDBRACKET  shift, and go to state 219


State 215

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON • $@31 for_expression CLOSEDBRACKET statements $@32 $@33

    $default  reduce using rule 125 ($@31)

    $@31  go to state 220


State 216

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 • case_list CLOSEDCURL $@38 $@39

    CASE     shift, and go to state 221
    DEFAULT  shift, and go to state 222

    case_list       go to state 223
    case_statement  go to state 224


State 217

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 • else_if_statement

    ELSE  shift, and go to state 225

    $default  reduce using rule 108 (else_if_statement)

    else_if_statement  go to state 226


State 218

  114 while_statement: WHILE $@17 $@18 OPENBRACKET value CLOSEDBRACKET $@19 statement $@20 $@21 •

    $default  reduce using rule 114 (while_statement)


State 219

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET • SEMICOLON $@26

    SEMICOLON  shift, and go to state 227


State 220

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 • for_expression CLOSEDBRACKET statements $@32 $@33

    IDENTIFIER   shift, and go to state 228
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    $default  reduce using rule 139 (for_expression)

    value                  go to state 229
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    for_expression         go to state 230


State 221

  150 case_statement: CASE • value COLON $@40 statements

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 231
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 222

  152 case_statement: DEFAULT • COLON $@41 statements

    COLON  shift, and go to state 232


State 223

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list • CLOSEDCURL $@38 $@39
  147 case_list: case_list • case_statement

    CASE        shift, and go to state 221
    DEFAULT     shift, and go to state 222
    CLOSEDCURL  shift, and go to state 233

    case_statement  go to state 234


State 224

  148 case_list: case_statement •

    $default  reduce using rule 148 (case_list)


State 225

  107 else_if_statement: ELSE • $@15 OPENCURL $@16 statements CLOSEDCURL

    $default  reduce using rule 105 ($@15)

    $@15  go to state 235


State 226

  100 if_statement: IF $@9 OPENBRACKET value CLOSEDBRACKET OPENCURL $@10 statements CLOSEDCURL $@11 else_if_statement •
  104 else_if_statement: else_if_statement • ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14

    ELSEIF  shift, and go to state 236

    $default  reduce using rule 100 (if_statement)


State 227

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON • $@26

    $default  reduce using rule 119 ($@26)

    $@26  go to state 237


State 228

   85 unary_expression: IDENTIFIER • INC
   86                 | IDENTIFIER • DEC
   95 factor: IDENTIFIER •
  133 for_expression: IDENTIFIER • EQUAL value SEMICOLON
  134               | IDENTIFIER • PLUS_EQ expression
  135               | IDENTIFIER • MINUS_EQ expression
  136               | IDENTIFIER • MULT_EQ expression
  137               | IDENTIFIER • DIV_EQ expression

    PLUS_EQ   shift, and go to state 238
    MINUS_EQ  shift, and go to state 239
    MULT_EQ   shift, and go to state 240
    DIV_EQ    shift, and go to state 241
    INC       shift, and go to state 54
    DEC       shift, and go to state 55
    EQUAL     shift, and go to state 242

    $default  reduce using rule 95 (factor)


State 229

  138 for_expression: value •

    $default  reduce using rule 138 (for_expression)


State 230

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression • CLOSEDBRACKET statements $@32 $@33

    CLOSEDBRACKET  shift, and go to state 243


State 231

  150 case_statement: CASE value • COLON $@40 statements

    COLON  shift, and go to state 244


State 232

  152 case_statement: DEFAULT COLON • $@41 statements

    $default  reduce using rule 151 ($@41)

    $@41  go to state 245


State 233

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL • $@38 $@39

    $default  reduce using rule 144 ($@38)

    $@38  go to state 246


State 234

  147 case_list: case_list case_statement •

    $default  reduce using rule 147 (case_list)


State 235

  107 else_if_statement: ELSE $@15 • OPENCURL $@16 statements CLOSEDCURL

    OPENCURL  shift, and go to state 247


State 236

  104 else_if_statement: else_if_statement ELSEIF • OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14

    OPENBRACKET  shift, and go to state 248


State 237

  120 do_while_statement: DO $@22 $@23 statement WHILE OPENBRACKET value $@24 $@25 CLOSEDBRACKET SEMICOLON $@26 •

    $default  reduce using rule 120 (do_while_statement)


State 238

  134 for_expression: IDENTIFIER PLUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 249
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 239

  135 for_expression: IDENTIFIER MINUS_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 250
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 240

  136 for_expression: IDENTIFIER MULT_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 251
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 241

  137 for_expression: IDENTIFIER DIV_EQ • expression

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    expression             go to state 252
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 242

  133 for_expression: IDENTIFIER EQUAL • value SEMICOLON

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 253
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 243

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET • statements $@32 $@33

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 254
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 244

  150 case_statement: CASE value COLON • $@40 statements

    $default  reduce using rule 149 ($@40)

    $@40  go to state 255


State 245

  152 case_statement: DEFAULT COLON $@41 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 256
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 246

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 • $@39

    $default  reduce using rule 145 ($@39)

    $@39  go to state 257


State 247

  107 else_if_statement: ELSE $@15 OPENCURL • $@16 statements CLOSEDCURL

    $default  reduce using rule 106 ($@16)

    $@16  go to state 258


State 248

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET • value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14

    IDENTIFIER   shift, and go to state 60
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    STRING_VAL   shift, and go to state 70
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    CHAR_VAL     shift, and go to state 71
    NOT          shift, and go to state 13
    OPENBRACKET  shift, and go to state 23

    value                  go to state 259
    expression             go to state 74
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42


State 249

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
  134 for_expression: IDENTIFIER PLUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 134 (for_expression)


State 250

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
  135 for_expression: IDENTIFIER MINUS_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 135 (for_expression)


State 251

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
  136 for_expression: IDENTIFIER MULT_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 136 (for_expression)


State 252

   72 boolean_expression: expression • EQ_EQ arithmetic_expression
   73                   | expression • NE arithmetic_expression
   74                   | expression • GE arithmetic_expression
   75                   | expression • LE arithmetic_expression
   76                   | expression • GT arithmetic_expression
   77                   | expression • LT arithmetic_expression
   78                   | expression • AND arithmetic_expression
   79                   | expression • OR arithmetic_expression
  137 for_expression: IDENTIFIER DIV_EQ expression •

    LT     shift, and go to state 81
    GT     shift, and go to state 82
    GE     shift, and go to state 83
    LE     shift, and go to state 84
    EQ_EQ  shift, and go to state 85
    NE     shift, and go to state 86
    AND    shift, and go to state 87
    OR     shift, and go to state 88

    $default  reduce using rule 137 (for_expression)


State 253

  133 for_expression: IDENTIFIER EQUAL value • SEMICOLON

    SEMICOLON  shift, and go to state 260


State 254

    1 statements: statements • statement
  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements • $@32 $@33

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    IDENTIFIER   [reduce using rule 126 ($@32)]
    INT_NUM      [reduce using rule 126 ($@32)]
    FLOAT_VAL    [reduce using rule 126 ($@32)]
    TRUE_VAL     [reduce using rule 126 ($@32)]
    FALSE_VAL    [reduce using rule 126 ($@32)]
    INT          [reduce using rule 126 ($@32)]
    FLOAT        [reduce using rule 126 ($@32)]
    CHAR         [reduce using rule 126 ($@32)]
    BOOL         [reduce using rule 126 ($@32)]
    STRING       [reduce using rule 126 ($@32)]
    CONST        [reduce using rule 126 ($@32)]
    EXTERN       [reduce using rule 126 ($@32)]
    NOT          [reduce using rule 126 ($@32)]
    IF           [reduce using rule 126 ($@32)]
    WHILE        [reduce using rule 126 ($@32)]
    DO           [reduce using rule 126 ($@32)]
    FOR          [reduce using rule 126 ($@32)]
    SWITCH       [reduce using rule 126 ($@32)]
    BREAK        [reduce using rule 126 ($@32)]
    CONTINUE     [reduce using rule 126 ($@32)]
    VOID         [reduce using rule 126 ($@32)]
    RETURN       [reduce using rule 126 ($@32)]
    OPENBRACKET  [reduce using rule 126 ($@32)]
    OPENCURL     [reduce using rule 126 ($@32)]
    SEMICOLON    [reduce using rule 126 ($@32)]
    $default     reduce using rule 126 ($@32)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    $@32                   go to state 261
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 255

  150 case_statement: CASE value COLON $@40 • statements

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 262
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 256

    1 statements: statements • statement
  152 case_statement: DEFAULT COLON $@41 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 152 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 257

  146 switch_statement: SWITCH $@34 $@35 OPENBRACKET $@36 value CLOSEDBRACKET OPENCURL $@37 case_list CLOSEDCURL $@38 $@39 •

    $default  reduce using rule 146 (switch_statement)


State 258

  107 else_if_statement: ELSE $@15 OPENCURL $@16 • statements CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 263
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 259

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value • CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14

    CLOSEDBRACKET  shift, and go to state 264


State 260

  133 for_expression: IDENTIFIER EQUAL value SEMICOLON •

    $default  reduce using rule 133 (for_expression)


State 261

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 • $@33

    $default  reduce using rule 127 ($@33)

    $@33  go to state 265


State 262

    1 statements: statements • statement
  150 case_statement: CASE value COLON $@40 statements •

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    $default  reduce using rule 150 (case_statement)

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 263

    1 statements: statements • statement
  107 else_if_statement: ELSE $@15 OPENCURL $@16 statements • CLOSEDCURL

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 266
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 264

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET • OPENCURL $@12 $@13 statements CLOSEDCURL $@14

    OPENCURL  shift, and go to state 267


State 265

  128 for_statement: FOR $@27 OPENBRACKET for_initialization $@28 value $@29 $@30 SEMICOLON $@31 for_expression CLOSEDBRACKET statements $@32 $@33 •

    $default  reduce using rule 128 (for_statement)


State 266

  107 else_if_statement: ELSE $@15 OPENCURL $@16 statements CLOSEDCURL •

    $default  reduce using rule 107 (else_if_statement)


State 267

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL • $@12 $@13 statements CLOSEDCURL $@14

    $default  reduce using rule 101 ($@12)

    $@12  go to state 268


State 268

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 • $@13 statements CLOSEDCURL $@14

    $default  reduce using rule 102 ($@13)

    $@13  go to state 269


State 269

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 • statements CLOSEDCURL $@14

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    statements             go to state 270
    statement              go to state 27
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 270

    1 statements: statements • statement
  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements • CLOSEDCURL $@14

    IDENTIFIER   shift, and go to state 1
    INT_NUM      shift, and go to state 2
    FLOAT_VAL    shift, and go to state 3
    TRUE_VAL     shift, and go to state 4
    FALSE_VAL    shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    CHAR         shift, and go to state 8
    BOOL         shift, and go to state 9
    STRING       shift, and go to state 10
    CONST        shift, and go to state 11
    EXTERN       shift, and go to state 12
    NOT          shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    DO           shift, and go to state 16
    FOR          shift, and go to state 17
    SWITCH       shift, and go to state 18
    BREAK        shift, and go to state 19
    CONTINUE     shift, and go to state 20
    VOID         shift, and go to state 21
    RETURN       shift, and go to state 22
    OPENBRACKET  shift, and go to state 23
    OPENCURL     shift, and go to state 24
    CLOSEDCURL   shift, and go to state 271
    SEMICOLON    shift, and go to state 25

    statement              go to state 78
    type                   go to state 28
    assignment_statement   go to state 29
    var_declaration        go to state 30
    constant_declaration   go to state 31
    extern_declartion      go to state 32
    function               go to state 33
    function_prototype     go to state 34
    function_call          go to state 35
    expression             go to state 36
    boolean_expression     go to state 37
    arithmetic_expression  go to state 38
    unary_expression       go to state 39
    binary_expression      go to state 40
    term                   go to state 41
    factor                 go to state 42
    if_statement           go to state 43
    while_statement        go to state 44
    do_while_statement     go to state 45
    for_statement          go to state 46
    switch_statement       go to state 47
    break_statement        go to state 48
    continue_statement     go to state 49


State 271

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL • $@14

    $default  reduce using rule 103 ($@14)

    $@14  go to state 272


State 272

  104 else_if_statement: else_if_statement ELSEIF OPENBRACKET value CLOSEDBRACKET OPENCURL $@12 $@13 statements CLOSEDCURL $@14 •

    $default  reduce using rule 104 (else_if_statement)
